/*
 * WaaS OpenAPI Documentation
 * This is a WaaS OpenAPI Server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.waas.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.openweb3.waas.internal.JSON;

/**
 * Chain
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class Chain {
  public static final String SERIALIZED_NAME_CHAIN = "chain";
  @SerializedName(SERIALIZED_NAME_CHAIN)
  private String chain;

  public static final String SERIALIZED_NAME_CONFIRM_NUM = "confirm_num";
  @SerializedName(SERIALIZED_NAME_CONFIRM_NUM)
  private Integer confirmNum;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_EXPLORER_ADDRESS_URL = "explorer_address_url";
  @SerializedName(SERIALIZED_NAME_EXPLORER_ADDRESS_URL)
  private String explorerAddressUrl;

  public static final String SERIALIZED_NAME_EXPLORER_BLOCK_URL = "explorer_block_url";
  @SerializedName(SERIALIZED_NAME_EXPLORER_BLOCK_URL)
  private String explorerBlockUrl;

  public static final String SERIALIZED_NAME_EXPLORER_TX_URL = "explorer_tx_url";
  @SerializedName(SERIALIZED_NAME_EXPLORER_TX_URL)
  private String explorerTxUrl;

  public static final String SERIALIZED_NAME_ICON_URL = "icon_url";
  @SerializedName(SERIALIZED_NAME_ICON_URL)
  private String iconUrl;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEED_MEMO = "need_memo";
  @SerializedName(SERIALIZED_NAME_NEED_MEMO)
  private Boolean needMemo;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_SYMBOL = "symbol";
  @SerializedName(SERIALIZED_NAME_SYMBOL)
  private String symbol;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public Chain() {
  }

  public Chain chain(String chain) {
    this.chain = chain;
    return this;
  }

  /**
   * Chain
   * @return chain
   */
  @javax.annotation.Nullable
  public String getChain() {
    return chain;
  }

  public void setChain(String chain) {
    this.chain = chain;
  }


  public Chain confirmNum(Integer confirmNum) {
    this.confirmNum = confirmNum;
    return this;
  }

  /**
   * Confirmation number
   * @return confirmNum
   */
  @javax.annotation.Nullable
  public Integer getConfirmNum() {
    return confirmNum;
  }

  public void setConfirmNum(Integer confirmNum) {
    this.confirmNum = confirmNum;
  }


  public Chain createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Created time
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public Chain explorerAddressUrl(String explorerAddressUrl) {
    this.explorerAddressUrl = explorerAddressUrl;
    return this;
  }

  /**
   * Explorer address URL
   * @return explorerAddressUrl
   */
  @javax.annotation.Nullable
  public String getExplorerAddressUrl() {
    return explorerAddressUrl;
  }

  public void setExplorerAddressUrl(String explorerAddressUrl) {
    this.explorerAddressUrl = explorerAddressUrl;
  }


  public Chain explorerBlockUrl(String explorerBlockUrl) {
    this.explorerBlockUrl = explorerBlockUrl;
    return this;
  }

  /**
   * Explorer block URL
   * @return explorerBlockUrl
   */
  @javax.annotation.Nullable
  public String getExplorerBlockUrl() {
    return explorerBlockUrl;
  }

  public void setExplorerBlockUrl(String explorerBlockUrl) {
    this.explorerBlockUrl = explorerBlockUrl;
  }


  public Chain explorerTxUrl(String explorerTxUrl) {
    this.explorerTxUrl = explorerTxUrl;
    return this;
  }

  /**
   * Explorer transaction URL
   * @return explorerTxUrl
   */
  @javax.annotation.Nullable
  public String getExplorerTxUrl() {
    return explorerTxUrl;
  }

  public void setExplorerTxUrl(String explorerTxUrl) {
    this.explorerTxUrl = explorerTxUrl;
  }


  public Chain iconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
    return this;
  }

  /**
   * Icon URL
   * @return iconUrl
   */
  @javax.annotation.Nullable
  public String getIconUrl() {
    return iconUrl;
  }

  public void setIconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
  }


  public Chain id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Chain ID
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Chain name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Chain name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Chain needMemo(Boolean needMemo) {
    this.needMemo = needMemo;
    return this;
  }

  /**
   * Need memo
   * @return needMemo
   */
  @javax.annotation.Nullable
  public Boolean getNeedMemo() {
    return needMemo;
  }

  public void setNeedMemo(Boolean needMemo) {
    this.needMemo = needMemo;
  }


  public Chain network(String network) {
    this.network = network;
    return this;
  }

  /**
   * Chain network
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }


  public Chain symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

  /**
   * Chain symbol
   * @return symbol
   */
  @javax.annotation.Nullable
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public Chain updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Updated time
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Chain chain = (Chain) o;
    return Objects.equals(this.chain, chain.chain) &&
        Objects.equals(this.confirmNum, chain.confirmNum) &&
        Objects.equals(this.createdAt, chain.createdAt) &&
        Objects.equals(this.explorerAddressUrl, chain.explorerAddressUrl) &&
        Objects.equals(this.explorerBlockUrl, chain.explorerBlockUrl) &&
        Objects.equals(this.explorerTxUrl, chain.explorerTxUrl) &&
        Objects.equals(this.iconUrl, chain.iconUrl) &&
        Objects.equals(this.id, chain.id) &&
        Objects.equals(this.name, chain.name) &&
        Objects.equals(this.needMemo, chain.needMemo) &&
        Objects.equals(this.network, chain.network) &&
        Objects.equals(this.symbol, chain.symbol) &&
        Objects.equals(this.updatedAt, chain.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chain, confirmNum, createdAt, explorerAddressUrl, explorerBlockUrl, explorerTxUrl, iconUrl, id, name, needMemo, network, symbol, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Chain {\n");
    sb.append("    chain: ").append(toIndentedString(chain)).append("\n");
    sb.append("    confirmNum: ").append(toIndentedString(confirmNum)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    explorerAddressUrl: ").append(toIndentedString(explorerAddressUrl)).append("\n");
    sb.append("    explorerBlockUrl: ").append(toIndentedString(explorerBlockUrl)).append("\n");
    sb.append("    explorerTxUrl: ").append(toIndentedString(explorerTxUrl)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    needMemo: ").append(toIndentedString(needMemo)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chain");
    openapiFields.add("confirm_num");
    openapiFields.add("created_at");
    openapiFields.add("explorer_address_url");
    openapiFields.add("explorer_block_url");
    openapiFields.add("explorer_tx_url");
    openapiFields.add("icon_url");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("need_memo");
    openapiFields.add("network");
    openapiFields.add("symbol");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Chain
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Chain.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Chain is not found in the empty JSON string", Chain.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Chain.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Chain` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("chain") != null && !jsonObj.get("chain").isJsonNull()) && !jsonObj.get("chain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chain").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("explorer_address_url") != null && !jsonObj.get("explorer_address_url").isJsonNull()) && !jsonObj.get("explorer_address_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `explorer_address_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("explorer_address_url").toString()));
      }
      if ((jsonObj.get("explorer_block_url") != null && !jsonObj.get("explorer_block_url").isJsonNull()) && !jsonObj.get("explorer_block_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `explorer_block_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("explorer_block_url").toString()));
      }
      if ((jsonObj.get("explorer_tx_url") != null && !jsonObj.get("explorer_tx_url").isJsonNull()) && !jsonObj.get("explorer_tx_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `explorer_tx_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("explorer_tx_url").toString()));
      }
      if ((jsonObj.get("icon_url") != null && !jsonObj.get("icon_url").isJsonNull()) && !jsonObj.get("icon_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `icon_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("icon_url").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
      if ((jsonObj.get("symbol") != null && !jsonObj.get("symbol").isJsonNull()) && !jsonObj.get("symbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `symbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Chain.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Chain' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Chain> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Chain.class));

       return (TypeAdapter<T>) new TypeAdapter<Chain>() {
           @Override
           public void write(JsonWriter out, Chain value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Chain read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Chain given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Chain
   * @throws IOException if the JSON string is invalid with respect to Chain
   */
  public static Chain fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Chain.class);
  }

  /**
   * Convert an instance of Chain to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

