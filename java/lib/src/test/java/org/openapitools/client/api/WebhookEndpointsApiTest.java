/*
 * WaaS OpenAPI Documentation
 * This is a custody wallet service openapi server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateWebhook;
import org.openapitools.client.model.CursorPageWebhook;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.UpdateWebhook;
import org.openapitools.client.model.Webhook;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhookEndpointsApi
 */
@Ignore
public class WebhookEndpointsApiTest {

    private final WebhookEndpointsApi api = new WebhookEndpointsApi();

    
    /**
     * Create webhook endpoint
     *
     * Create a webhook endpoint
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1WebhooksCreateTest() throws ApiException {
        String appId = null;
        CreateWebhook createWebhook = null;
        Webhook response = api.v1WebhooksCreate(appId, createWebhook);

        // TODO: test validations
    }
    
    /**
     * Delete webhook endpoint
     *
     * Delete specific webhook endpoint
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1WebhooksDeleteTest() throws ApiException {
        String appId = null;
        String endpointId = null;
        Webhook response = api.v1WebhooksDelete(appId, endpointId);

        // TODO: test validations
    }
    
    /**
     * List webhook endpoints
     *
     * List webhook endpoints
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1WebhooksListTest() throws ApiException {
        String appId = null;
        String cursor = null;
        Integer limit = null;
        CursorPageWebhook response = api.v1WebhooksList(appId, cursor, limit);

        // TODO: test validations
    }
    
    /**
     * Get webhook endpoint
     *
     * Get specific webhook endpoint
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1WebhooksRetrieveTest() throws ApiException {
        String appId = null;
        String endpointId = null;
        Webhook response = api.v1WebhooksRetrieve(appId, endpointId);

        // TODO: test validations
    }
    
    /**
     * Update webhook endpoint
     *
     * Update specific webhook endpoint
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1WebhooksUpdateTest() throws ApiException {
        String appId = null;
        String endpointId = null;
        UpdateWebhook updateWebhook = null;
        Webhook response = api.v1WebhooksUpdate(appId, endpointId, updateWebhook);

        // TODO: test validations
    }
    
}
