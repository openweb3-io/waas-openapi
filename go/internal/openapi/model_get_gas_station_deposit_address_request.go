/*
WaaS OpenAPI Documentation

This is a WaaS OpenAPI Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetGasStationDepositAddressRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGasStationDepositAddressRequest{}

// GetGasStationDepositAddressRequest struct for GetGasStationDepositAddressRequest
type GetGasStationDepositAddressRequest struct {
	// Chain ID
	ChainId string `json:"chain_id"`
	// Wallet ID
	WalletId *string `json:"wallet_id,omitempty"`
}

type _GetGasStationDepositAddressRequest GetGasStationDepositAddressRequest

// NewGetGasStationDepositAddressRequest instantiates a new GetGasStationDepositAddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGasStationDepositAddressRequest(chainId string) *GetGasStationDepositAddressRequest {
	this := GetGasStationDepositAddressRequest{}
	this.ChainId = chainId
	return &this
}

// NewGetGasStationDepositAddressRequestWithDefaults instantiates a new GetGasStationDepositAddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGasStationDepositAddressRequestWithDefaults() *GetGasStationDepositAddressRequest {
	this := GetGasStationDepositAddressRequest{}
	return &this
}

// GetChainId returns the ChainId field value
func (o *GetGasStationDepositAddressRequest) GetChainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *GetGasStationDepositAddressRequest) GetChainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *GetGasStationDepositAddressRequest) SetChainId(v string) {
	o.ChainId = v
}

// GetWalletId returns the WalletId field value if set, zero value otherwise.
func (o *GetGasStationDepositAddressRequest) GetWalletId() string {
	if o == nil || IsNil(o.WalletId) {
		var ret string
		return ret
	}
	return *o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGasStationDepositAddressRequest) GetWalletIdOk() (*string, bool) {
	if o == nil || IsNil(o.WalletId) {
		return nil, false
	}
	return o.WalletId, true
}

// HasWalletId returns a boolean if a field has been set.
func (o *GetGasStationDepositAddressRequest) HasWalletId() bool {
	if o != nil && !IsNil(o.WalletId) {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given string and assigns it to the WalletId field.
func (o *GetGasStationDepositAddressRequest) SetWalletId(v string) {
	o.WalletId = &v
}

func (o GetGasStationDepositAddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGasStationDepositAddressRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chain_id"] = o.ChainId
	if !IsNil(o.WalletId) {
		toSerialize["wallet_id"] = o.WalletId
	}
	return toSerialize, nil
}

func (o *GetGasStationDepositAddressRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chain_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetGasStationDepositAddressRequest := _GetGasStationDepositAddressRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetGasStationDepositAddressRequest)

	if err != nil {
		return err
	}

	*o = GetGasStationDepositAddressRequest(varGetGasStationDepositAddressRequest)

	return err
}

type NullableGetGasStationDepositAddressRequest struct {
	value *GetGasStationDepositAddressRequest
	isSet bool
}

func (v NullableGetGasStationDepositAddressRequest) Get() *GetGasStationDepositAddressRequest {
	return v.value
}

func (v *NullableGetGasStationDepositAddressRequest) Set(val *GetGasStationDepositAddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGasStationDepositAddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGasStationDepositAddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGasStationDepositAddressRequest(val *GetGasStationDepositAddressRequest) *NullableGetGasStationDepositAddressRequest {
	return &NullableGetGasStationDepositAddressRequest{value: val, isSet: true}
}

func (v NullableGetGasStationDepositAddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGasStationDepositAddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


