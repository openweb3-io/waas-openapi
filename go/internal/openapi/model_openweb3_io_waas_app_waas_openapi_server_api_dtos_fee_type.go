/*
 * WaaS OpenAPI Documentation
 *
 * This is a custody wallet service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType the model 'Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType'
type Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType int32

// List of openweb3_io_waas_app_waas-openapi-server_api_dtos.FeeType
const (
	OPENWEB3IOWAASAPPWAASOPENAPISERVERAPIDTOSFEETYPE_Fixed Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType = 0
)

var allowedOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeTypeEnumValues = []Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType{
	0,
}

func (v *Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType(value)
	for _, existing := range allowedOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType", value)
}

// NewOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeTypeFromValue returns a pointer to a valid Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeTypeFromValue(v int32) (*Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType, error) {
	ev := Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType: valid values are %v", v, allowedOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) IsValid() bool {
	for _, existing := range allowedOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to openweb3_io_waas_app_waas-openapi-server_api_dtos.FeeType value
func (v Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) Ptr() *Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType {
	return &v
}

type NullableOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeType struct {
	value *Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType
	isSet bool
}

func (v NullableOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) Get() *Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType {
	return v.value
}

func (v *NullableOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) Set(val *Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeType(val *Openweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) *NullableOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeType {
	return &NullableOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeType{value: val, isSet: true}
}

func (v NullableOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenweb3IoWaasAppWaasOpenapiServerApiDtosFeeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

