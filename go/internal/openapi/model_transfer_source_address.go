/*
 * WaaS OpenAPI Documentation
 *
 * This is a WaaS OpenAPI Server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransferSourceAddress struct for TransferSourceAddress
type TransferSourceAddress struct {
	// Address
	Address string `json:"address"`
	// Wallet ID
	WalletId string `json:"wallet_id"`
}

// NewTransferSourceAddress instantiates a new TransferSourceAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferSourceAddress(address string, walletId string) *TransferSourceAddress {
	this := TransferSourceAddress{}
	this.Address = address
	this.WalletId = walletId
	return &this
}

// NewTransferSourceAddressWithDefaults instantiates a new TransferSourceAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferSourceAddressWithDefaults() *TransferSourceAddress {
	this := TransferSourceAddress{}
	return &this
}

// GetAddress returns the Address field value
func (o *TransferSourceAddress) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *TransferSourceAddress) GetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *TransferSourceAddress) SetAddress(v string) {
	o.Address = v
}

// GetWalletId returns the WalletId field value
func (o *TransferSourceAddress) GetWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value
// and a boolean to check if the value has been set.
func (o *TransferSourceAddress) GetWalletIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WalletId, true
}

// SetWalletId sets field value
func (o *TransferSourceAddress) SetWalletId(v string) {
	o.WalletId = v
}

func (o TransferSourceAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["wallet_id"] = o.WalletId
	}
	return json.Marshal(toSerialize)
}

type NullableTransferSourceAddress struct {
	value *TransferSourceAddress
	isSet bool
}

func (v NullableTransferSourceAddress) Get() *TransferSourceAddress {
	return v.value
}

func (v *NullableTransferSourceAddress) Set(val *TransferSourceAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferSourceAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferSourceAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferSourceAddress(val *TransferSourceAddress) *NullableTransferSourceAddress {
	return &NullableTransferSourceAddress{value: val, isSet: true}
}

func (v NullableTransferSourceAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferSourceAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


