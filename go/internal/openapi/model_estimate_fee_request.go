/*
WaaS OpenAPI Documentation

This is a WaaS OpenAPI Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EstimateFeeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EstimateFeeRequest{}

// EstimateFeeRequest struct for EstimateFeeRequest
type EstimateFeeRequest struct {
	// Amount
	Amount string `json:"amount"`
	Destination CreateTransferRequestDestination `json:"destination"`
	// Extra
	Extra *string `json:"extra,omitempty"`
	// Memo
	Memo *string `json:"memo,omitempty"`
	Source CreateTransferRequestSource `json:"source"`
	// Token ID
	TokenId string `json:"token_id"`
}

type _EstimateFeeRequest EstimateFeeRequest

// NewEstimateFeeRequest instantiates a new EstimateFeeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimateFeeRequest(amount string, destination CreateTransferRequestDestination, source CreateTransferRequestSource, tokenId string) *EstimateFeeRequest {
	this := EstimateFeeRequest{}
	this.Amount = amount
	this.Destination = destination
	this.Source = source
	this.TokenId = tokenId
	return &this
}

// NewEstimateFeeRequestWithDefaults instantiates a new EstimateFeeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimateFeeRequestWithDefaults() *EstimateFeeRequest {
	this := EstimateFeeRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *EstimateFeeRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *EstimateFeeRequest) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *EstimateFeeRequest) SetAmount(v string) {
	o.Amount = v
}

// GetDestination returns the Destination field value
func (o *EstimateFeeRequest) GetDestination() CreateTransferRequestDestination {
	if o == nil {
		var ret CreateTransferRequestDestination
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *EstimateFeeRequest) GetDestinationOk() (*CreateTransferRequestDestination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *EstimateFeeRequest) SetDestination(v CreateTransferRequestDestination) {
	o.Destination = v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *EstimateFeeRequest) GetExtra() string {
	if o == nil || IsNil(o.Extra) {
		var ret string
		return ret
	}
	return *o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateFeeRequest) GetExtraOk() (*string, bool) {
	if o == nil || IsNil(o.Extra) {
		return nil, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *EstimateFeeRequest) HasExtra() bool {
	if o != nil && !IsNil(o.Extra) {
		return true
	}

	return false
}

// SetExtra gets a reference to the given string and assigns it to the Extra field.
func (o *EstimateFeeRequest) SetExtra(v string) {
	o.Extra = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *EstimateFeeRequest) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateFeeRequest) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *EstimateFeeRequest) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *EstimateFeeRequest) SetMemo(v string) {
	o.Memo = &v
}

// GetSource returns the Source field value
func (o *EstimateFeeRequest) GetSource() CreateTransferRequestSource {
	if o == nil {
		var ret CreateTransferRequestSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *EstimateFeeRequest) GetSourceOk() (*CreateTransferRequestSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *EstimateFeeRequest) SetSource(v CreateTransferRequestSource) {
	o.Source = v
}

// GetTokenId returns the TokenId field value
func (o *EstimateFeeRequest) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *EstimateFeeRequest) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *EstimateFeeRequest) SetTokenId(v string) {
	o.TokenId = v
}

func (o EstimateFeeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EstimateFeeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["destination"] = o.Destination
	if !IsNil(o.Extra) {
		toSerialize["extra"] = o.Extra
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	toSerialize["source"] = o.Source
	toSerialize["token_id"] = o.TokenId
	return toSerialize, nil
}

func (o *EstimateFeeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"destination",
		"source",
		"token_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEstimateFeeRequest := _EstimateFeeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEstimateFeeRequest)

	if err != nil {
		return err
	}

	*o = EstimateFeeRequest(varEstimateFeeRequest)

	return err
}

type NullableEstimateFeeRequest struct {
	value *EstimateFeeRequest
	isSet bool
}

func (v NullableEstimateFeeRequest) Get() *EstimateFeeRequest {
	return v.value
}

func (v *NullableEstimateFeeRequest) Set(val *EstimateFeeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimateFeeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimateFeeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimateFeeRequest(val *EstimateFeeRequest) *NullableEstimateFeeRequest {
	return &NullableEstimateFeeRequest{value: val, isSet: true}
}

func (v NullableEstimateFeeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimateFeeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


