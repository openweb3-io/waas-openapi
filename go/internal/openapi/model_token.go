/*
WaaS OpenAPI Documentation

This is a WaaS OpenAPI Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Token type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Token{}

// Token struct for Token
type Token struct {
	// Asset ID
	AssetId string `json:"asset_id"`
	// Whether deposits are allowed
	CanDeposit bool `json:"can_deposit"`
	// Whether withdrawals are allowed
	CanWithdraw bool `json:"can_withdraw"`
	// Chain ID
	ChainId string `json:"chain_id"`
	// Contract address
	ContractAddress string `json:"contract_address"`
	// Creation time
	CreatedAt string `json:"created_at"`
	// Decimals
	Decimals int32 `json:"decimals"`
	// Fee token ID
	FeeTokenId string `json:"fee_token_id"`
	// Icon
	IconUrl string `json:"icon_url"`
	// Token ID
	Id string `json:"id"`
	// Max withdraw amount
	MaxWithdrawAmount string `json:"max_withdraw_amount"`
	// Min deposit amount
	MinDepositAmount string `json:"min_deposit_amount"`
	// Min withdraw amount
	MinWithdrawAmount string `json:"min_withdraw_amount"`
	// Name
	Name string `json:"name"`
	// Precision
	Precision int32 `json:"precision"`
	// Symbol . e.g.: BTC / ETH
	Symbol string `json:"symbol"`
	// Last updated time
	UpdatedAt string `json:"updated_at"`
}

type _Token Token

// NewToken instantiates a new Token object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToken(assetId string, canDeposit bool, canWithdraw bool, chainId string, contractAddress string, createdAt string, decimals int32, feeTokenId string, iconUrl string, id string, maxWithdrawAmount string, minDepositAmount string, minWithdrawAmount string, name string, precision int32, symbol string, updatedAt string) *Token {
	this := Token{}
	this.AssetId = assetId
	this.CanDeposit = canDeposit
	this.CanWithdraw = canWithdraw
	this.ChainId = chainId
	this.ContractAddress = contractAddress
	this.CreatedAt = createdAt
	this.Decimals = decimals
	this.FeeTokenId = feeTokenId
	this.IconUrl = iconUrl
	this.Id = id
	this.MaxWithdrawAmount = maxWithdrawAmount
	this.MinDepositAmount = minDepositAmount
	this.MinWithdrawAmount = minWithdrawAmount
	this.Name = name
	this.Precision = precision
	this.Symbol = symbol
	this.UpdatedAt = updatedAt
	return &this
}

// NewTokenWithDefaults instantiates a new Token object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenWithDefaults() *Token {
	this := Token{}
	return &this
}

// GetAssetId returns the AssetId field value
func (o *Token) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *Token) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *Token) SetAssetId(v string) {
	o.AssetId = v
}

// GetCanDeposit returns the CanDeposit field value
func (o *Token) GetCanDeposit() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanDeposit
}

// GetCanDepositOk returns a tuple with the CanDeposit field value
// and a boolean to check if the value has been set.
func (o *Token) GetCanDepositOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanDeposit, true
}

// SetCanDeposit sets field value
func (o *Token) SetCanDeposit(v bool) {
	o.CanDeposit = v
}

// GetCanWithdraw returns the CanWithdraw field value
func (o *Token) GetCanWithdraw() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanWithdraw
}

// GetCanWithdrawOk returns a tuple with the CanWithdraw field value
// and a boolean to check if the value has been set.
func (o *Token) GetCanWithdrawOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanWithdraw, true
}

// SetCanWithdraw sets field value
func (o *Token) SetCanWithdraw(v bool) {
	o.CanWithdraw = v
}

// GetChainId returns the ChainId field value
func (o *Token) GetChainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *Token) GetChainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *Token) SetChainId(v string) {
	o.ChainId = v
}

// GetContractAddress returns the ContractAddress field value
func (o *Token) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *Token) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *Token) SetContractAddress(v string) {
	o.ContractAddress = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Token) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Token) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Token) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDecimals returns the Decimals field value
func (o *Token) GetDecimals() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field value
// and a boolean to check if the value has been set.
func (o *Token) GetDecimalsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Decimals, true
}

// SetDecimals sets field value
func (o *Token) SetDecimals(v int32) {
	o.Decimals = v
}

// GetFeeTokenId returns the FeeTokenId field value
func (o *Token) GetFeeTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeeTokenId
}

// GetFeeTokenIdOk returns a tuple with the FeeTokenId field value
// and a boolean to check if the value has been set.
func (o *Token) GetFeeTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeTokenId, true
}

// SetFeeTokenId sets field value
func (o *Token) SetFeeTokenId(v string) {
	o.FeeTokenId = v
}

// GetIconUrl returns the IconUrl field value
func (o *Token) GetIconUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value
// and a boolean to check if the value has been set.
func (o *Token) GetIconUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IconUrl, true
}

// SetIconUrl sets field value
func (o *Token) SetIconUrl(v string) {
	o.IconUrl = v
}

// GetId returns the Id field value
func (o *Token) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Token) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Token) SetId(v string) {
	o.Id = v
}

// GetMaxWithdrawAmount returns the MaxWithdrawAmount field value
func (o *Token) GetMaxWithdrawAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxWithdrawAmount
}

// GetMaxWithdrawAmountOk returns a tuple with the MaxWithdrawAmount field value
// and a boolean to check if the value has been set.
func (o *Token) GetMaxWithdrawAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxWithdrawAmount, true
}

// SetMaxWithdrawAmount sets field value
func (o *Token) SetMaxWithdrawAmount(v string) {
	o.MaxWithdrawAmount = v
}

// GetMinDepositAmount returns the MinDepositAmount field value
func (o *Token) GetMinDepositAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinDepositAmount
}

// GetMinDepositAmountOk returns a tuple with the MinDepositAmount field value
// and a boolean to check if the value has been set.
func (o *Token) GetMinDepositAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinDepositAmount, true
}

// SetMinDepositAmount sets field value
func (o *Token) SetMinDepositAmount(v string) {
	o.MinDepositAmount = v
}

// GetMinWithdrawAmount returns the MinWithdrawAmount field value
func (o *Token) GetMinWithdrawAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinWithdrawAmount
}

// GetMinWithdrawAmountOk returns a tuple with the MinWithdrawAmount field value
// and a boolean to check if the value has been set.
func (o *Token) GetMinWithdrawAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinWithdrawAmount, true
}

// SetMinWithdrawAmount sets field value
func (o *Token) SetMinWithdrawAmount(v string) {
	o.MinWithdrawAmount = v
}

// GetName returns the Name field value
func (o *Token) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Token) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Token) SetName(v string) {
	o.Name = v
}

// GetPrecision returns the Precision field value
func (o *Token) GetPrecision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Precision
}

// GetPrecisionOk returns a tuple with the Precision field value
// and a boolean to check if the value has been set.
func (o *Token) GetPrecisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Precision, true
}

// SetPrecision sets field value
func (o *Token) SetPrecision(v int32) {
	o.Precision = v
}

// GetSymbol returns the Symbol field value
func (o *Token) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *Token) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *Token) SetSymbol(v string) {
	o.Symbol = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Token) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Token) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Token) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o Token) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Token) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_id"] = o.AssetId
	toSerialize["can_deposit"] = o.CanDeposit
	toSerialize["can_withdraw"] = o.CanWithdraw
	toSerialize["chain_id"] = o.ChainId
	toSerialize["contract_address"] = o.ContractAddress
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["decimals"] = o.Decimals
	toSerialize["fee_token_id"] = o.FeeTokenId
	toSerialize["icon_url"] = o.IconUrl
	toSerialize["id"] = o.Id
	toSerialize["max_withdraw_amount"] = o.MaxWithdrawAmount
	toSerialize["min_deposit_amount"] = o.MinDepositAmount
	toSerialize["min_withdraw_amount"] = o.MinWithdrawAmount
	toSerialize["name"] = o.Name
	toSerialize["precision"] = o.Precision
	toSerialize["symbol"] = o.Symbol
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *Token) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset_id",
		"can_deposit",
		"can_withdraw",
		"chain_id",
		"contract_address",
		"created_at",
		"decimals",
		"fee_token_id",
		"icon_url",
		"id",
		"max_withdraw_amount",
		"min_deposit_amount",
		"min_withdraw_amount",
		"name",
		"precision",
		"symbol",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToken := _Token{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToken)

	if err != nil {
		return err
	}

	*o = Token(varToken)

	return err
}

type NullableToken struct {
	value *Token
	isSet bool
}

func (v NullableToken) Get() *Token {
	return v.value
}

func (v *NullableToken) Set(val *Token) {
	v.value = val
	v.isSet = true
}

func (v NullableToken) IsSet() bool {
	return v.isSet
}

func (v *NullableToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToken(val *Token) *NullableToken {
	return &NullableToken{value: val, isSet: true}
}

func (v NullableToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


