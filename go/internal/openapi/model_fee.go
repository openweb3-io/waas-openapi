/*
 * WaaS OpenAPI Documentation
 *
 * This is a WaaS OpenAPI Server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Fee struct for Fee
type Fee struct {
	// Max fee amount
	MaxFeeAmount string `json:"maxFeeAmount"`
	// Token ID
	TokenId string `json:"tokenId"`
	// Fee type
	Type FeeType `json:"type"`
}

// NewFee instantiates a new Fee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFee(maxFeeAmount string, tokenId string, type_ FeeType) *Fee {
	this := Fee{}
	this.MaxFeeAmount = maxFeeAmount
	this.TokenId = tokenId
	this.Type = type_
	return &this
}

// NewFeeWithDefaults instantiates a new Fee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeWithDefaults() *Fee {
	this := Fee{}
	return &this
}

// GetMaxFeeAmount returns the MaxFeeAmount field value
func (o *Fee) GetMaxFeeAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxFeeAmount
}

// GetMaxFeeAmountOk returns a tuple with the MaxFeeAmount field value
// and a boolean to check if the value has been set.
func (o *Fee) GetMaxFeeAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxFeeAmount, true
}

// SetMaxFeeAmount sets field value
func (o *Fee) SetMaxFeeAmount(v string) {
	o.MaxFeeAmount = v
}

// GetTokenId returns the TokenId field value
func (o *Fee) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *Fee) GetTokenIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *Fee) SetTokenId(v string) {
	o.TokenId = v
}

// GetType returns the Type field value
func (o *Fee) GetType() FeeType {
	if o == nil {
		var ret FeeType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Fee) GetTypeOk() (*FeeType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Fee) SetType(v FeeType) {
	o.Type = v
}

func (o Fee) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["maxFeeAmount"] = o.MaxFeeAmount
	}
	if true {
		toSerialize["tokenId"] = o.TokenId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableFee struct {
	value *Fee
	isSet bool
}

func (v NullableFee) Get() *Fee {
	return v.value
}

func (v *NullableFee) Set(val *Fee) {
	v.value = val
	v.isSet = true
}

func (v NullableFee) IsSet() bool {
	return v.isSet
}

func (v *NullableFee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFee(val *Fee) *NullableFee {
	return &NullableFee{value: val, isSet: true}
}

func (v NullableFee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


