/*
WaaS OpenAPI Documentation

This is a WaaS OpenAPI Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateGasStationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateGasStationRequest{}

// CreateGasStationRequest struct for CreateGasStationRequest
type CreateGasStationRequest struct {
	// Chain ID
	ChainId string `json:"chain_id"`
	// Disabled
	Disabled bool `json:"disabled"`
	// Gas Capacity
	GasCapacity string `json:"gas_capacity"`
	// Gas Threshold
	GasThreshold string `json:"gas_threshold"`
	// Max Fee Limit
	MaxFeeLimit string `json:"max_fee_limit"`
}

type _CreateGasStationRequest CreateGasStationRequest

// NewCreateGasStationRequest instantiates a new CreateGasStationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGasStationRequest(chainId string, disabled bool, gasCapacity string, gasThreshold string, maxFeeLimit string) *CreateGasStationRequest {
	this := CreateGasStationRequest{}
	this.ChainId = chainId
	this.Disabled = disabled
	this.GasCapacity = gasCapacity
	this.GasThreshold = gasThreshold
	this.MaxFeeLimit = maxFeeLimit
	return &this
}

// NewCreateGasStationRequestWithDefaults instantiates a new CreateGasStationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGasStationRequestWithDefaults() *CreateGasStationRequest {
	this := CreateGasStationRequest{}
	return &this
}

// GetChainId returns the ChainId field value
func (o *CreateGasStationRequest) GetChainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *CreateGasStationRequest) GetChainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *CreateGasStationRequest) SetChainId(v string) {
	o.ChainId = v
}

// GetDisabled returns the Disabled field value
func (o *CreateGasStationRequest) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *CreateGasStationRequest) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *CreateGasStationRequest) SetDisabled(v bool) {
	o.Disabled = v
}

// GetGasCapacity returns the GasCapacity field value
func (o *CreateGasStationRequest) GetGasCapacity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasCapacity
}

// GetGasCapacityOk returns a tuple with the GasCapacity field value
// and a boolean to check if the value has been set.
func (o *CreateGasStationRequest) GetGasCapacityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasCapacity, true
}

// SetGasCapacity sets field value
func (o *CreateGasStationRequest) SetGasCapacity(v string) {
	o.GasCapacity = v
}

// GetGasThreshold returns the GasThreshold field value
func (o *CreateGasStationRequest) GetGasThreshold() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasThreshold
}

// GetGasThresholdOk returns a tuple with the GasThreshold field value
// and a boolean to check if the value has been set.
func (o *CreateGasStationRequest) GetGasThresholdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasThreshold, true
}

// SetGasThreshold sets field value
func (o *CreateGasStationRequest) SetGasThreshold(v string) {
	o.GasThreshold = v
}

// GetMaxFeeLimit returns the MaxFeeLimit field value
func (o *CreateGasStationRequest) GetMaxFeeLimit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxFeeLimit
}

// GetMaxFeeLimitOk returns a tuple with the MaxFeeLimit field value
// and a boolean to check if the value has been set.
func (o *CreateGasStationRequest) GetMaxFeeLimitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFeeLimit, true
}

// SetMaxFeeLimit sets field value
func (o *CreateGasStationRequest) SetMaxFeeLimit(v string) {
	o.MaxFeeLimit = v
}

func (o CreateGasStationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateGasStationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chain_id"] = o.ChainId
	toSerialize["disabled"] = o.Disabled
	toSerialize["gas_capacity"] = o.GasCapacity
	toSerialize["gas_threshold"] = o.GasThreshold
	toSerialize["max_fee_limit"] = o.MaxFeeLimit
	return toSerialize, nil
}

func (o *CreateGasStationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chain_id",
		"disabled",
		"gas_capacity",
		"gas_threshold",
		"max_fee_limit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateGasStationRequest := _CreateGasStationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateGasStationRequest)

	if err != nil {
		return err
	}

	*o = CreateGasStationRequest(varCreateGasStationRequest)

	return err
}

type NullableCreateGasStationRequest struct {
	value *CreateGasStationRequest
	isSet bool
}

func (v NullableCreateGasStationRequest) Get() *CreateGasStationRequest {
	return v.value
}

func (v *NullableCreateGasStationRequest) Set(val *CreateGasStationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGasStationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGasStationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGasStationRequest(val *CreateGasStationRequest) *NullableCreateGasStationRequest {
	return &NullableCreateGasStationRequest{value: val, isSet: true}
}

func (v NullableCreateGasStationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGasStationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


