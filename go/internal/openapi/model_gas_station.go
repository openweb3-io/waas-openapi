/*
WaaS OpenAPI Documentation

This is a WaaS OpenAPI Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GasStation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GasStation{}

// GasStation struct for GasStation
type GasStation struct {
	// Application ID
	AppId string `json:"app_id"`
	// Chain ID
	ChainId string `json:"chain_id"`
	// Created time
	CreatedAt *string `json:"created_at,omitempty"`
	// Disabled
	Disabled bool `json:"disabled"`
	// Gas Capacity
	GasCapacity string `json:"gas_capacity"`
	// Gas Threshold
	GasThreshold string `json:"gas_threshold"`
	// Gas Station ID
	Id string `json:"id"`
	// Max Fee Limit
	MaxFeeLimit string `json:"max_fee_limit"`
	// Organization ID
	OrgId string `json:"org_id"`
	// Updated time
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

type _GasStation GasStation

// NewGasStation instantiates a new GasStation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGasStation(appId string, chainId string, disabled bool, gasCapacity string, gasThreshold string, id string, maxFeeLimit string, orgId string) *GasStation {
	this := GasStation{}
	this.AppId = appId
	this.ChainId = chainId
	this.Disabled = disabled
	this.GasCapacity = gasCapacity
	this.GasThreshold = gasThreshold
	this.Id = id
	this.MaxFeeLimit = maxFeeLimit
	this.OrgId = orgId
	return &this
}

// NewGasStationWithDefaults instantiates a new GasStation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGasStationWithDefaults() *GasStation {
	this := GasStation{}
	return &this
}

// GetAppId returns the AppId field value
func (o *GasStation) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *GasStation) SetAppId(v string) {
	o.AppId = v
}

// GetChainId returns the ChainId field value
func (o *GasStation) GetChainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetChainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *GasStation) SetChainId(v string) {
	o.ChainId = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GasStation) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GasStation) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GasStation) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GasStation) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDisabled returns the Disabled field value
func (o *GasStation) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *GasStation) SetDisabled(v bool) {
	o.Disabled = v
}

// GetGasCapacity returns the GasCapacity field value
func (o *GasStation) GetGasCapacity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasCapacity
}

// GetGasCapacityOk returns a tuple with the GasCapacity field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetGasCapacityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasCapacity, true
}

// SetGasCapacity sets field value
func (o *GasStation) SetGasCapacity(v string) {
	o.GasCapacity = v
}

// GetGasThreshold returns the GasThreshold field value
func (o *GasStation) GetGasThreshold() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasThreshold
}

// GetGasThresholdOk returns a tuple with the GasThreshold field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetGasThresholdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasThreshold, true
}

// SetGasThreshold sets field value
func (o *GasStation) SetGasThreshold(v string) {
	o.GasThreshold = v
}

// GetId returns the Id field value
func (o *GasStation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GasStation) SetId(v string) {
	o.Id = v
}

// GetMaxFeeLimit returns the MaxFeeLimit field value
func (o *GasStation) GetMaxFeeLimit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxFeeLimit
}

// GetMaxFeeLimitOk returns a tuple with the MaxFeeLimit field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetMaxFeeLimitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFeeLimit, true
}

// SetMaxFeeLimit sets field value
func (o *GasStation) SetMaxFeeLimit(v string) {
	o.MaxFeeLimit = v
}

// GetOrgId returns the OrgId field value
func (o *GasStation) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *GasStation) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *GasStation) SetOrgId(v string) {
	o.OrgId = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GasStation) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GasStation) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GasStation) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GasStation) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o GasStation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GasStation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app_id"] = o.AppId
	toSerialize["chain_id"] = o.ChainId
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	toSerialize["disabled"] = o.Disabled
	toSerialize["gas_capacity"] = o.GasCapacity
	toSerialize["gas_threshold"] = o.GasThreshold
	toSerialize["id"] = o.Id
	toSerialize["max_fee_limit"] = o.MaxFeeLimit
	toSerialize["org_id"] = o.OrgId
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

func (o *GasStation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"app_id",
		"chain_id",
		"disabled",
		"gas_capacity",
		"gas_threshold",
		"id",
		"max_fee_limit",
		"org_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGasStation := _GasStation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGasStation)

	if err != nil {
		return err
	}

	*o = GasStation(varGasStation)

	return err
}

type NullableGasStation struct {
	value *GasStation
	isSet bool
}

func (v NullableGasStation) Get() *GasStation {
	return v.value
}

func (v *NullableGasStation) Set(val *GasStation) {
	v.value = val
	v.isSet = true
}

func (v NullableGasStation) IsSet() bool {
	return v.isSet
}

func (v *NullableGasStation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGasStation(val *GasStation) *NullableGasStation {
	return &NullableGasStation{value: val, isSet: true}
}

func (v NullableGasStation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGasStation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


