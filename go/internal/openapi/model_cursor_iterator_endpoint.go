/*
WaaS OpenAPI Documentation

This is a WaaS OpenAPI Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CursorIteratorEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CursorIteratorEndpoint{}

// CursorIteratorEndpoint struct for CursorIteratorEndpoint
type CursorIteratorEndpoint struct {
	Done bool `json:"done"`
	HasNext bool `json:"has_next"`
	HasPrev bool `json:"has_prev"`
	Items []Endpoint `json:"items"`
	NextCursor *string `json:"next_cursor,omitempty"`
	PrevCursor *string `json:"prev_cursor,omitempty"`
}

type _CursorIteratorEndpoint CursorIteratorEndpoint

// NewCursorIteratorEndpoint instantiates a new CursorIteratorEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursorIteratorEndpoint(done bool, hasNext bool, hasPrev bool, items []Endpoint) *CursorIteratorEndpoint {
	this := CursorIteratorEndpoint{}
	this.Done = done
	this.HasNext = hasNext
	this.HasPrev = hasPrev
	this.Items = items
	return &this
}

// NewCursorIteratorEndpointWithDefaults instantiates a new CursorIteratorEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorIteratorEndpointWithDefaults() *CursorIteratorEndpoint {
	this := CursorIteratorEndpoint{}
	return &this
}

// GetDone returns the Done field value
func (o *CursorIteratorEndpoint) GetDone() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Done
}

// GetDoneOk returns a tuple with the Done field value
// and a boolean to check if the value has been set.
func (o *CursorIteratorEndpoint) GetDoneOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Done, true
}

// SetDone sets field value
func (o *CursorIteratorEndpoint) SetDone(v bool) {
	o.Done = v
}

// GetHasNext returns the HasNext field value
func (o *CursorIteratorEndpoint) GetHasNext() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasNext
}

// GetHasNextOk returns a tuple with the HasNext field value
// and a boolean to check if the value has been set.
func (o *CursorIteratorEndpoint) GetHasNextOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasNext, true
}

// SetHasNext sets field value
func (o *CursorIteratorEndpoint) SetHasNext(v bool) {
	o.HasNext = v
}

// GetHasPrev returns the HasPrev field value
func (o *CursorIteratorEndpoint) GetHasPrev() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasPrev
}

// GetHasPrevOk returns a tuple with the HasPrev field value
// and a boolean to check if the value has been set.
func (o *CursorIteratorEndpoint) GetHasPrevOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasPrev, true
}

// SetHasPrev sets field value
func (o *CursorIteratorEndpoint) SetHasPrev(v bool) {
	o.HasPrev = v
}

// GetItems returns the Items field value
func (o *CursorIteratorEndpoint) GetItems() []Endpoint {
	if o == nil {
		var ret []Endpoint
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CursorIteratorEndpoint) GetItemsOk() ([]Endpoint, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *CursorIteratorEndpoint) SetItems(v []Endpoint) {
	o.Items = v
}

// GetNextCursor returns the NextCursor field value if set, zero value otherwise.
func (o *CursorIteratorEndpoint) GetNextCursor() string {
	if o == nil || IsNil(o.NextCursor) {
		var ret string
		return ret
	}
	return *o.NextCursor
}

// GetNextCursorOk returns a tuple with the NextCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorIteratorEndpoint) GetNextCursorOk() (*string, bool) {
	if o == nil || IsNil(o.NextCursor) {
		return nil, false
	}
	return o.NextCursor, true
}

// HasNextCursor returns a boolean if a field has been set.
func (o *CursorIteratorEndpoint) HasNextCursor() bool {
	if o != nil && !IsNil(o.NextCursor) {
		return true
	}

	return false
}

// SetNextCursor gets a reference to the given string and assigns it to the NextCursor field.
func (o *CursorIteratorEndpoint) SetNextCursor(v string) {
	o.NextCursor = &v
}

// GetPrevCursor returns the PrevCursor field value if set, zero value otherwise.
func (o *CursorIteratorEndpoint) GetPrevCursor() string {
	if o == nil || IsNil(o.PrevCursor) {
		var ret string
		return ret
	}
	return *o.PrevCursor
}

// GetPrevCursorOk returns a tuple with the PrevCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorIteratorEndpoint) GetPrevCursorOk() (*string, bool) {
	if o == nil || IsNil(o.PrevCursor) {
		return nil, false
	}
	return o.PrevCursor, true
}

// HasPrevCursor returns a boolean if a field has been set.
func (o *CursorIteratorEndpoint) HasPrevCursor() bool {
	if o != nil && !IsNil(o.PrevCursor) {
		return true
	}

	return false
}

// SetPrevCursor gets a reference to the given string and assigns it to the PrevCursor field.
func (o *CursorIteratorEndpoint) SetPrevCursor(v string) {
	o.PrevCursor = &v
}

func (o CursorIteratorEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CursorIteratorEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["done"] = o.Done
	toSerialize["has_next"] = o.HasNext
	toSerialize["has_prev"] = o.HasPrev
	toSerialize["items"] = o.Items
	if !IsNil(o.NextCursor) {
		toSerialize["next_cursor"] = o.NextCursor
	}
	if !IsNil(o.PrevCursor) {
		toSerialize["prev_cursor"] = o.PrevCursor
	}
	return toSerialize, nil
}

func (o *CursorIteratorEndpoint) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"done",
		"has_next",
		"has_prev",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCursorIteratorEndpoint := _CursorIteratorEndpoint{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCursorIteratorEndpoint)

	if err != nil {
		return err
	}

	*o = CursorIteratorEndpoint(varCursorIteratorEndpoint)

	return err
}

type NullableCursorIteratorEndpoint struct {
	value *CursorIteratorEndpoint
	isSet bool
}

func (v NullableCursorIteratorEndpoint) Get() *CursorIteratorEndpoint {
	return v.value
}

func (v *NullableCursorIteratorEndpoint) Set(val *CursorIteratorEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableCursorIteratorEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableCursorIteratorEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursorIteratorEndpoint(val *CursorIteratorEndpoint) *NullableCursorIteratorEndpoint {
	return &NullableCursorIteratorEndpoint{value: val, isSet: true}
}

func (v NullableCursorIteratorEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursorIteratorEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


