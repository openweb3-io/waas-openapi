/*
 * WaaS OpenAPI Documentation
 *
 * This is a WaaS OpenAPI Server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransactionEndpoint struct for TransactionEndpoint
type TransactionEndpoint struct {
	// Address
	Address *string `json:"address,omitempty"`
	// Amount
	Amount *string `json:"amount,omitempty"`
	// The memo
	Memo *string `json:"memo,omitempty"`
	// Transaction endpoint type
	Type *string `json:"type,omitempty"`
}

// NewTransactionEndpoint instantiates a new TransactionEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionEndpoint() *TransactionEndpoint {
	this := TransactionEndpoint{}
	return &this
}

// NewTransactionEndpointWithDefaults instantiates a new TransactionEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionEndpointWithDefaults() *TransactionEndpoint {
	this := TransactionEndpoint{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TransactionEndpoint) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionEndpoint) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TransactionEndpoint) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *TransactionEndpoint) SetAddress(v string) {
	o.Address = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TransactionEndpoint) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionEndpoint) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TransactionEndpoint) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *TransactionEndpoint) SetAmount(v string) {
	o.Amount = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *TransactionEndpoint) GetMemo() string {
	if o == nil || o.Memo == nil {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionEndpoint) GetMemoOk() (*string, bool) {
	if o == nil || o.Memo == nil {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *TransactionEndpoint) HasMemo() bool {
	if o != nil && o.Memo != nil {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *TransactionEndpoint) SetMemo(v string) {
	o.Memo = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TransactionEndpoint) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionEndpoint) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TransactionEndpoint) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TransactionEndpoint) SetType(v string) {
	o.Type = &v
}

func (o TransactionEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Memo != nil {
		toSerialize["memo"] = o.Memo
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionEndpoint struct {
	value *TransactionEndpoint
	isSet bool
}

func (v NullableTransactionEndpoint) Get() *TransactionEndpoint {
	return v.value
}

func (v *NullableTransactionEndpoint) Set(val *TransactionEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionEndpoint(val *TransactionEndpoint) *NullableTransactionEndpoint {
	return &NullableTransactionEndpoint{value: val, isSet: true}
}

func (v NullableTransactionEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


