/*
WaaS OpenAPI Documentation

This is a WaaS OpenAPI Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddressValidityItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressValidityItem{}

// AddressValidityItem struct for AddressValidityItem
type AddressValidityItem struct {
	// Address
	Address *string `json:"address,omitempty"`
	// Validity
	Validity *bool `json:"validity,omitempty"`
}

// NewAddressValidityItem instantiates a new AddressValidityItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressValidityItem() *AddressValidityItem {
	this := AddressValidityItem{}
	return &this
}

// NewAddressValidityItemWithDefaults instantiates a new AddressValidityItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressValidityItemWithDefaults() *AddressValidityItem {
	this := AddressValidityItem{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *AddressValidityItem) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressValidityItem) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *AddressValidityItem) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *AddressValidityItem) SetAddress(v string) {
	o.Address = &v
}

// GetValidity returns the Validity field value if set, zero value otherwise.
func (o *AddressValidityItem) GetValidity() bool {
	if o == nil || IsNil(o.Validity) {
		var ret bool
		return ret
	}
	return *o.Validity
}

// GetValidityOk returns a tuple with the Validity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressValidityItem) GetValidityOk() (*bool, bool) {
	if o == nil || IsNil(o.Validity) {
		return nil, false
	}
	return o.Validity, true
}

// HasValidity returns a boolean if a field has been set.
func (o *AddressValidityItem) HasValidity() bool {
	if o != nil && !IsNil(o.Validity) {
		return true
	}

	return false
}

// SetValidity gets a reference to the given bool and assigns it to the Validity field.
func (o *AddressValidityItem) SetValidity(v bool) {
	o.Validity = &v
}

func (o AddressValidityItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressValidityItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Validity) {
		toSerialize["validity"] = o.Validity
	}
	return toSerialize, nil
}

type NullableAddressValidityItem struct {
	value *AddressValidityItem
	isSet bool
}

func (v NullableAddressValidityItem) Get() *AddressValidityItem {
	return v.value
}

func (v *NullableAddressValidityItem) Set(val *AddressValidityItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressValidityItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressValidityItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressValidityItem(val *AddressValidityItem) *NullableAddressValidityItem {
	return &NullableAddressValidityItem{value: val, isSet: true}
}

func (v NullableAddressValidityItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressValidityItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


