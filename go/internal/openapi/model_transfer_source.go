/*
 * WaaS OpenAPI Documentation
 *
 * This is a WaaS OpenAPI Server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransferSource struct for TransferSource
type TransferSource struct {
	// Address
	Address *TransferSourceAddress `json:"address,omitempty"`
	// Transfer source type
	Type *TransferSourceType `json:"type,omitempty"`
}

// NewTransferSource instantiates a new TransferSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferSource() *TransferSource {
	this := TransferSource{}
	return &this
}

// NewTransferSourceWithDefaults instantiates a new TransferSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferSourceWithDefaults() *TransferSource {
	this := TransferSource{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TransferSource) GetAddress() TransferSourceAddress {
	if o == nil || o.Address == nil {
		var ret TransferSourceAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferSource) GetAddressOk() (*TransferSourceAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TransferSource) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given TransferSourceAddress and assigns it to the Address field.
func (o *TransferSource) SetAddress(v TransferSourceAddress) {
	o.Address = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TransferSource) GetType() TransferSourceType {
	if o == nil || o.Type == nil {
		var ret TransferSourceType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferSource) GetTypeOk() (*TransferSourceType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TransferSource) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given TransferSourceType and assigns it to the Type field.
func (o *TransferSource) SetType(v TransferSourceType) {
	o.Type = &v
}

func (o TransferSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableTransferSource struct {
	value *TransferSource
	isSet bool
}

func (v NullableTransferSource) Get() *TransferSource {
	return v.value
}

func (v *NullableTransferSource) Set(val *TransferSource) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferSource) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferSource(val *TransferSource) *NullableTransferSource {
	return &NullableTransferSource{value: val, isSet: true}
}

func (v NullableTransferSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


