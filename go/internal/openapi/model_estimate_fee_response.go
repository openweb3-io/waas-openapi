/*
 * WaaS OpenAPI Documentation
 *
 * This is a custody wallet service openapi server.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EstimateFeeResponse struct for EstimateFeeResponse
type EstimateFeeResponse struct {
	// Amount
	Amount *string `json:"amount,omitempty"`
	// Token ID
	TokenId *string `json:"token_id,omitempty"`
}

// NewEstimateFeeResponse instantiates a new EstimateFeeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimateFeeResponse() *EstimateFeeResponse {
	this := EstimateFeeResponse{}
	return &this
}

// NewEstimateFeeResponseWithDefaults instantiates a new EstimateFeeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimateFeeResponseWithDefaults() *EstimateFeeResponse {
	this := EstimateFeeResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *EstimateFeeResponse) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateFeeResponse) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *EstimateFeeResponse) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *EstimateFeeResponse) SetAmount(v string) {
	o.Amount = &v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *EstimateFeeResponse) GetTokenId() string {
	if o == nil || o.TokenId == nil {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateFeeResponse) GetTokenIdOk() (*string, bool) {
	if o == nil || o.TokenId == nil {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *EstimateFeeResponse) HasTokenId() bool {
	if o != nil && o.TokenId != nil {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *EstimateFeeResponse) SetTokenId(v string) {
	o.TokenId = &v
}

func (o EstimateFeeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.TokenId != nil {
		toSerialize["token_id"] = o.TokenId
	}
	return json.Marshal(toSerialize)
}

type NullableEstimateFeeResponse struct {
	value *EstimateFeeResponse
	isSet bool
}

func (v NullableEstimateFeeResponse) Get() *EstimateFeeResponse {
	return v.value
}

func (v *NullableEstimateFeeResponse) Set(val *EstimateFeeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimateFeeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimateFeeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimateFeeResponse(val *EstimateFeeResponse) *NullableEstimateFeeResponse {
	return &NullableEstimateFeeResponse{value: val, isSet: true}
}

func (v NullableEstimateFeeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimateFeeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
