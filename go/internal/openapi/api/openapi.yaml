openapi: 3.0.2
info:
  description: This is a WaaS OpenAPI Server.
  title: WaaS OpenAPI Documentation
  version: "1.0"
externalDocs:
  description: ""
  url: ""
servers:
- url: /
paths:
  /api/v1/addresses:
    get:
      description: List of all available addresses.
      operationId: v1.addresses.list
      parameters:
      - description: Unique system generated identifier of the wallet
        explode: true
        in: query
        name: wallet_ids
        required: false
        schema:
          description: Unique system generated identifier of the wallet
          items:
            type: string
          type: array
          uniqueItems: false
          x-order: "1"
        style: form
      - description: The chain ids.
        explode: true
        in: query
        name: chain_ids
        required: false
        schema:
          description: The chain ids.
          items:
            type: string
          type: array
          uniqueItems: false
          x-order: "2"
        style: form
      - description: The cursor to use for pagination.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          description: The cursor to use for pagination.
          type: string
          x-order: "3"
        style: form
      - description: "The number of records to return default: 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The number of records to return default: 20"
          type: integer
          x-order: "4"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List all addresses
      tags:
      - Addresses
  /api/v1/addresses/validate:
    get:
      description: Validate addresses
      operationId: v1.addresses.validate
      parameters:
      - description: Chain ID
        explode: true
        in: query
        name: chain_id
        required: true
        schema:
          description: Chain ID
          type: string
        style: form
      - description: Addresses
        explode: true
        in: query
        name: addresses
        required: true
        schema:
          description: Addresses
          items:
            type: string
          type: array
          uniqueItems: false
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAddressesReply'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Validate addresses
      tags:
      - Addresses
  /api/v1/chains:
    get:
      description: List of all available chains.
      operationId: v1.chains.list
      parameters:
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          description: Cursor
          type: string
          x-order: "1"
        style: form
      - description: "The number of records to return default: 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The number of records to return default: 20"
          type: integer
          x-order: "2"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Chain'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List all chains
      tags:
      - Chains
  /api/v1/chains/{chainId}:
    get:
      description: Retrieve chain information.
      operationId: v1.chains.retrieve
      parameters:
      - description: Chain ID
        explode: false
        in: path
        name: chainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chain'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve chain
      tags:
      - Chains
  /api/v1/gas_stations:
    get:
      description: List all gas stations
      operationId: v1.gas_stations.list
      parameters:
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          description: Cursor
          type: string
          x-order: "1"
        style: form
      - description: "The number of records to return default: 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The number of records to return default: 20"
          type: integer
          x-order: "2"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-GasStation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List gas stations
      tags:
      - Gas Stations
    post:
      description: Create a Gas Station
      operationId: v1.gas_stations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGasStationRequest'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GasStation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create gas station
      tags:
      - Gas Stations
  /api/v1/gas_stations/deposit_address:
    get:
      description: Get or create a deposit address for a gas station
      operationId: v1.gas_stations.get_or_create_deposit_address
      parameters:
      - description: Chain ID
        explode: true
        in: query
        name: chain_id
        required: true
        schema:
          description: Chain ID
          type: string
        style: form
      - description: Wallet ID
        explode: true
        in: query
        name: wallet_id
        required: false
        schema:
          description: Wallet ID
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGasStationDepositAddressReply'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get or create deposit address
      tags:
      - Gas Stations
  /api/v1/gas_stations/{gasStationId}:
    delete:
      description: Delete a Gas Station
      operationId: v1.gas_stations.delete
      parameters:
      - description: Gas Station ID
        explode: false
        in: path
        name: gasStationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GasStation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete gas station
      tags:
      - Gas Stations
    get:
      description: Get a gas station by ID
      operationId: v1.gas_stations.retrieve
      parameters:
      - description: Gas Station ID
        explode: false
        in: path
        name: gasStationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GasStation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get gas station
      tags:
      - Gas Stations
    patch:
      description: Update a Gas Station
      operationId: v1.gas_stations.update
      parameters:
      - description: Gas Station ID
        explode: false
        in: path
        name: gasStationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGasStationRequest'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GasStation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update gas station
      tags:
      - Gas Stations
  /api/v1/sweeps/address/{address}:
    post:
      description: Sweep funds from a single address
      operationId: v1.sweeps.address
      parameters:
      - description: Address that funds will be swept from
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SweepAddressRequest'
        description: Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SweepAddressResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Sweep address
      tags:
      - Sweeps
  /api/v1/tokens:
    get:
      description: Retrieve a list of all tokens.
      operationId: v1.tokens.list
      parameters:
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          description: Cursor
          type: string
          x-order: "1"
        style: form
      - description: "The number of records to return default: 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The number of records to return default: 20"
          type: integer
          x-order: "2"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List tokens
      tags:
      - Tokens
    post:
      description: Create a tokens.
      operationId: v1.tokens.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create token
      tags:
      - Tokens
  /api/v1/tokens/{tokenId}:
    get:
      description: Get token info by ID
      operationId: v1.tokens.retrieve
      parameters:
      - description: Token ID
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Token
      tags:
      - Tokens
    patch:
      description: Update a tokens.
      operationId: v1.tokens.update
      parameters:
      - description: Token ID
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTokenRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update token
      tags:
      - Tokens
  /api/v1/transactions:
    get:
      description: List transactions
      operationId: v1.transactions.list
      parameters:
      - description: Unique system generated identifier of the wallet
        explode: true
        in: query
        name: wallet_ids
        required: false
        schema:
          description: Unique system generated identifier of the wallet
          items:
            type: string
          type: array
          uniqueItems: false
          x-order: "1"
        style: form
      - description: The blockchain network on which the transaction takes place.
        explode: true
        in: query
        name: chain_ids
        required: false
        schema:
          description: The blockchain network on which the transaction takes place.
          items:
            type: string
          type: array
          uniqueItems: false
          x-order: "2"
        style: form
      - description: The tokenId involved in the transaction.
        explode: true
        in: query
        name: token_ids
        required: false
        schema:
          description: The tokenId involved in the transaction.
          items:
            type: string
          type: array
          uniqueItems: false
          x-order: "3"
        style: form
      - description: The assetId involved in the transaction.
        explode: true
        in: query
        name: asset_ids
        required: false
        schema:
          description: The assetId involved in the transaction.
          items:
            type: string
          type: array
          uniqueItems: false
          x-order: "4"
        style: form
      - description: "The transaction hash, which uniquely identifies a transaction\
          \ on the blockchain."
        explode: true
        in: query
        name: hash
        required: false
        schema:
          description: "The transaction hash, which uniquely identifies a transaction\
            \ on the blockchain."
          type: string
          x-order: "5"
        style: form
      - description: The status of the transaction.
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: The status of the transaction.
          type: string
          x-order: "6"
        style: form
      - description: A cursor value for pagination purposes.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          description: A cursor value for pagination purposes.
          type: string
          x-order: "7"
        style: form
      - description: "The number of records to return default: 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The number of records to return default: 20"
          type: integer
          x-order: "8"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Transaction'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List transactions
      tags:
      - Transactions
  /api/v1/transactions/estimate_fee:
    post:
      description: Estimate fee for a transfer transaction
      operationId: v1.transactions.estimate_fee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstimateFeeRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateFeeResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Estimate fee
      tags:
      - Transactions
  /api/v1/transactions/sign_message:
    post:
      description: Sign message
      operationId: v1.transactions.sign_message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignMessageRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignMessageResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Sign message
      tags:
      - Transactions
  /api/v1/transactions/transfer:
    post:
      description: Create a transfer transaction
      operationId: v1.transactions.transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransferResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Transfer token
      tags:
      - Transactions
  /api/v1/transactions/{transactionId}:
    get:
      description: Get a transaction by ID
      operationId: v1.transactions.retrieve
      parameters:
      - description: Transaction ID
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get transaction
      tags:
      - Transactions
  /api/v1/wallets:
    get:
      description: List all wallets
      operationId: v1.wallets.list
      parameters:
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          description: Cursor
          type: string
          x-order: "1"
        style: form
      - description: "The number of records to return default: 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The number of records to return default: 20"
          type: integer
          x-order: "2"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List wallets
      tags:
      - Wallets
    post:
      description: Create a Wallet
      operationId: v1.wallets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletRequest'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create wallet
      tags:
      - Wallets
  /api/v1/wallets/{walletId}:
    delete:
      description: Delete a Wallet
      operationId: v1.wallets.delete
      parameters:
      - description: Wallet id or uid
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete wallet
      tags:
      - Wallets
    get:
      description: Get a wallet by ID
      operationId: v1.wallets.retrieve
      parameters:
      - description: Wallet id or uid
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get wallet
      tags:
      - Wallets
    patch:
      description: Update a Wallet
      operationId: v1.wallets.update
      parameters:
      - description: Wallet id or uid
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWalletRequest'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update wallet
      tags:
      - Wallets
  /api/v1/wallets/{walletId}/addresses:
    get:
      description: List addresses in wallet
      operationId: v1.wallets.listAddresses
      parameters:
      - description: Wallet id or uid
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: chain ids
        explode: true
        in: query
        name: chain_ids
        required: false
        schema:
          description: chain ids
          items:
            type: string
          type: array
          uniqueItems: false
          x-order: "1"
        style: form
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          description: Cursor
          type: string
          x-order: "2"
        style: form
      - description: "Limit, default is 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "Limit, default is 20"
          type: integer
          x-order: "3"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List wallet addresses
      tags:
      - Addresses
    post:
      description: Create address for wallet
      operationId: v1.wallets.createAddress
      parameters:
      - description: Wallet id or uid
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create address
      tags:
      - Addresses
  /api/v1/wallets/{walletId}/addresses/{address}:
    get:
      description: Get specific address information in wallet
      operationId: v1.wallets.getAddress
      parameters:
      - description: Wallet id or uid
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: Address
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get address information
      tags:
      - Addresses
  /api/v1/webhooks/endpoints:
    get:
      description: List webhook endpoints
      operationId: v1.webhooks.endpoint.list
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
          x-order: "1"
        style: form
      - description: "The number of records to return default: 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The number of records to return default: 20"
          type: integer
          x-order: "2"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List webhook endpoints
      tags:
      - Webhook endpoints
    post:
      description: Create a webhook endpoint
      operationId: v1.webhooks.endpoint.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpoint'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create webhook endpoint
      tags:
      - Webhook endpoints
  /api/v1/webhooks/endpoints/{endpointId}:
    delete:
      description: Delete specific webhook endpoint
      operationId: v1.webhooks.endpoint.delete
      parameters:
      - description: Endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete webhook endpoint
      tags:
      - Webhook endpoints
    get:
      description: Get specific webhook endpoint
      operationId: v1.webhooks.endpoint.retrieve
      parameters:
      - description: Endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get webhook endpoint
      tags:
      - Webhook endpoints
    patch:
      description: Update specific webhook endpoint
      operationId: v1.webhooks.endpoint.update
      parameters:
      - description: Endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpoint'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Update webhook endpoint
      tags:
      - Webhook endpoints
  /api/v1/webhooks/events:
    get:
      description: List webhook event types
      operationId: v1.webhooks.events.list
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
          x-order: "1"
        style: form
      - description: "The number of records to return default: 100"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: "The number of records to return default: 100"
          type: integer
          x-order: "2"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-EventType'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List webhook event types
      tags:
      - Webhook events
components:
  schemas:
    Address:
      example:
        path: path
        chain: chain
        wallet_id: wallet_id
        address: address
        chain_id: chain_id
        updated_at: updated_at
        created_at: created_at
        memo: memo
        type: type
      properties:
        address:
          description: Blockchain address
          type: string
        chain:
          description: Chain name
          type: string
        chain_id:
          description: Chain ID
          type: string
        created_at:
          description: Created time
          type: string
        memo:
          description: The memo
          type: string
        path:
          description: Derivation path
          type: string
        type:
          description: Address Type
          type: string
        updated_at:
          description: Updated time
          type: string
        wallet_id:
          description: Chain ID
          type: string
      required:
      - address
      type: object
    AddressValidityItem:
      example:
        address: address
        validity: true
      properties:
        address:
          description: Address
          type: string
        validity:
          description: Validity
          type: boolean
      type: object
    Chain:
      example:
        icon_url: icon_url
        symbol: symbol
        chain: chain
        need_memo: true
        created_at: created_at
        confirm_num: 0
        explorer_tx_url: explorer_tx_url
        network: network
        updated_at: updated_at
        name: name
        explorer_block_url: explorer_block_url
        id: id
        explorer_address_url: explorer_address_url
      properties:
        chain:
          description: Chain
          type: string
        confirm_num:
          description: Confirmation number
          type: integer
        created_at:
          description: Created time
          type: string
        explorer_address_url:
          description: Explorer address URL
          type: string
        explorer_block_url:
          description: Explorer block URL
          type: string
        explorer_tx_url:
          description: Explorer transaction URL
          type: string
        icon_url:
          description: Icon URL
          type: string
        id:
          description: Chain ID
          type: string
        name:
          description: Chain name
          type: string
        need_memo:
          description: Need memo
          type: boolean
        network:
          description: Chain network
          type: string
        symbol:
          description: Chain symbol
          type: string
        updated_at:
          description: Updated time
          type: string
      type: object
    CreateAddressRequest:
      example:
        chain_id: chain_id
        type: DEPOSIT
      properties:
        chain_id:
          description: Chain ID
          type: string
        type:
          description: Address Type
          enum:
          - DEPOSIT
          - HOT
          type: string
      required:
      - chain_id
      - type
      type: object
    CreateEndpoint:
      example:
        uid: uid
        description: description
        disabled: true
        eventTypes:
        - eventTypes
        - eventTypes
        url: url
      properties:
        description:
          description: The description of the endpoint
          type: string
        disabled:
          description: The disabled of the endpoint
          type: boolean
        eventTypes:
          description: The event types of the endpoint
          items:
            type: string
          type: array
          uniqueItems: false
        uid:
          description: The uid of the endpoint
          type: string
        url:
          description: The url of the endpoint
          type: string
      required:
      - eventTypes
      - url
      type: object
    CreateGasStationRequest:
      example:
        gas_threshold: gas_threshold
        chain_id: chain_id
        gas_capacity: gas_capacity
        max_fee_limit: max_fee_limit
        disabled: true
      properties:
        chain_id:
          description: Chain ID
          type: string
        disabled:
          description: Disabled
          type: boolean
        gas_capacity:
          description: Gas Capacity
          type: string
        gas_threshold:
          description: Gas Threshold
          type: string
        max_fee_limit:
          description: Max Fee Limit
          type: string
      required:
      - chain_id
      - disabled
      - gas_capacity
      - gas_threshold
      - max_fee_limit
      type: object
    CreateTokenRequest:
      example:
        uid: uid
        name: name
      properties:
        name:
          description: Token name
          type: string
        uid:
          description: Unique ID
          type: string
      type: object
    CreateTransferRequest:
      example:
        uid: uid
        amount: amount
        token_id: token_id
        extra: extra
        fee:
          maxFeeAmount: maxFeeAmount
          tokenId: tokenId
          type: 6
        destination:
          destination_type: destination_type
          address: address
        memo: memo
        source:
          wallet_id: wallet_id
          source_type: source_type
      properties:
        amount:
          description: The amount to be transferred
          type: string
        destination:
          $ref: '#/components/schemas/CreateTransferRequest_destination'
        extra:
          description: Extra
          type: string
        fee:
          $ref: '#/components/schemas/Fee'
        memo:
          description: Memo
          type: string
        source:
          $ref: '#/components/schemas/CreateTransferRequest_source'
        token_id:
          description: The tokenId to be transferred
          type: string
        uid:
          description: The custom unique transaction identifier
          type: string
      required:
      - amount
      - destination
      - source
      - token_id
      type: object
    CreateTransferResponse:
      example:
        transaction_id: transaction_id
        status: status
      properties:
        status:
          description: Transaction status
          type: string
        transaction_id:
          description: Transaction ID
          type: string
      required:
      - status
      - transaction_id
      type: object
    CreateWalletRequest:
      example:
        uid: uid
        sub_type: sub_type
        name: name
        type: type
      properties:
        name:
          description: Wallet name
          type: string
        sub_type:
          description: Wallet sub type
          type: string
          x-enum-varnames:
          - WalletSubType_Custodial_Asset
          - WalletSubType_Custodial_Web3
        type:
          description: Wallet type
          type: string
          x-enum-varnames:
          - WalletType_Custodial
        uid:
          description: Custom ID
          type: string
      required:
      - name
      - sub_type
      - type
      type: object
    CursorPage-Address:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 0
        has_next: true
        has_prev: true
        items:
        - path: path
          chain: chain
          wallet_id: wallet_id
          address: address
          chain_id: chain_id
          updated_at: updated_at
          created_at: created_at
          memo: memo
          type: type
        - path: path
          chain: chain
          wallet_id: wallet_id
          address: address
          chain_id: chain_id
          updated_at: updated_at
          created_at: created_at
          memo: memo
          type: type
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Address'
          type: array
          uniqueItems: false
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-Chain:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 6
        has_next: true
        has_prev: true
        items:
        - icon_url: icon_url
          symbol: symbol
          chain: chain
          need_memo: true
          created_at: created_at
          confirm_num: 0
          explorer_tx_url: explorer_tx_url
          network: network
          updated_at: updated_at
          name: name
          explorer_block_url: explorer_block_url
          id: id
          explorer_address_url: explorer_address_url
        - icon_url: icon_url
          symbol: symbol
          chain: chain
          need_memo: true
          created_at: created_at
          confirm_num: 0
          explorer_tx_url: explorer_tx_url
          network: network
          updated_at: updated_at
          name: name
          explorer_block_url: explorer_block_url
          id: id
          explorer_address_url: explorer_address_url
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Chain'
          type: array
          uniqueItems: false
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-Endpoint:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 0
        has_next: true
        has_prev: true
        items:
        - filter: filter
          createdAt: createdAt
          uid: uid
          description: description
          disabled: true
          id: id
          eventTypes:
          - eventTypes
          - eventTypes
          url: url
        - filter: filter
          createdAt: createdAt
          uid: uid
          description: description
          disabled: true
          id: id
          eventTypes:
          - eventTypes
          - eventTypes
          url: url
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
          uniqueItems: false
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-EventType:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 0
        has_next: true
        has_prev: true
        items:
        - name: name
          description: description
        - name: name
          description: description
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/EventType'
          type: array
          uniqueItems: false
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-GasStation:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 0
        has_next: true
        has_prev: true
        items:
        - gas_threshold: gas_threshold
          chain_id: chain_id
          updated_at: updated_at
          org_id: org_id
          created_at: created_at
          gas_capacity: gas_capacity
          max_fee_limit: max_fee_limit
          disabled: true
          id: id
          app_id: app_id
        - gas_threshold: gas_threshold
          chain_id: chain_id
          updated_at: updated_at
          org_id: org_id
          created_at: created_at
          gas_capacity: gas_capacity
          max_fee_limit: max_fee_limit
          disabled: true
          id: id
          app_id: app_id
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/GasStation'
          type: array
          uniqueItems: false
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-Token:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 1
        has_next: true
        has_prev: true
        items:
        - icon_url: icon_url
          symbol: symbol
          metadata:
            key: metadata
          need_memo: true
          total_supply: total_supply
          precision: 6
          created_at: created_at
          can_deposit: true
          contract_address: contract_address
          min_withdraw_amount: min_withdraw_amount
          max_withdraw_amount: max_withdraw_amount
          updated_at: updated_at
          decimals: 0
          name: name
          can_withdraw: true
          id: id
          min_deposit_amount: min_deposit_amount
        - icon_url: icon_url
          symbol: symbol
          metadata:
            key: metadata
          need_memo: true
          total_supply: total_supply
          precision: 6
          created_at: created_at
          can_deposit: true
          contract_address: contract_address
          min_withdraw_amount: min_withdraw_amount
          max_withdraw_amount: max_withdraw_amount
          updated_at: updated_at
          decimals: 0
          name: name
          can_withdraw: true
          id: id
          min_deposit_amount: min_deposit_amount
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Token'
          type: array
          uniqueItems: false
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-Transaction:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 1
        has_next: true
        has_prev: true
        items:
        - walletId: walletId
          chain: chain
          tokenId: tokenId
          signature: signature
          fee:
            maxFeeAmount: maxFeeAmount
            tokenId: tokenId
            type: 6
          confirmedNum: 0
          destination:
            amount: amount
            address: address
            memo: memo
            type: type
          description: description
          source:
            amount: amount
            address: address
            memo: memo
            type: type
          type: type
          createdAt: createdAt
          uid: uid
          chainId: chainId
          assetId: assetId
          extra:
            key: ""
          id: id
          hash: hash
          failedReason: failedReason
          status: status
          updatedAt: updatedAt
        - walletId: walletId
          chain: chain
          tokenId: tokenId
          signature: signature
          fee:
            maxFeeAmount: maxFeeAmount
            tokenId: tokenId
            type: 6
          confirmedNum: 0
          destination:
            amount: amount
            address: address
            memo: memo
            type: type
          description: description
          source:
            amount: amount
            address: address
            memo: memo
            type: type
          type: type
          createdAt: createdAt
          uid: uid
          chainId: chainId
          assetId: assetId
          extra:
            key: ""
          id: id
          hash: hash
          failedReason: failedReason
          status: status
          updatedAt: updatedAt
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
          uniqueItems: false
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-Wallet:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 0
        has_next: true
        has_prev: true
        items:
        - uid: uid
          sub_type: sub_type
          name: name
          created_at: created_at
          id: id
          type: type
          updatedAt: updatedAt
        - uid: uid
          sub_type: sub_type
          name: name
          created_at: created_at
          id: id
          type: type
          updatedAt: updatedAt
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Wallet'
          type: array
          uniqueItems: false
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    Endpoint:
      example:
        filter: filter
        createdAt: createdAt
        uid: uid
        description: description
        disabled: true
        id: id
        eventTypes:
        - eventTypes
        - eventTypes
        url: url
      properties:
        createdAt:
          type: string
        description:
          type: string
        disabled:
          type: boolean
        eventTypes:
          items:
            type: string
          type: array
          uniqueItems: false
        filter:
          type: string
        id:
          type: string
        uid:
          type: string
        url:
          type: string
      required:
      - createdAt
      - description
      - disabled
      - eventTypes
      - filter
      - id
      - url
      type: object
    Error:
      example:
        msg: msg
        code: 6
      properties:
        code:
          description: error code
          type: integer
        msg:
          description: error message
          type: string
      required:
      - code
      - msg
      type: object
    EstimateFeeRequest:
      example:
        amount: amount
        token_id: token_id
        extra: extra
        destination:
          destination_type: destination_type
          address: address
        memo: memo
        source:
          wallet_id: wallet_id
          source_type: source_type
      properties:
        amount:
          description: Amount
          type: string
        destination:
          $ref: '#/components/schemas/CreateTransferRequest_destination'
        extra:
          description: Extra
          type: string
        memo:
          description: Memo
          type: string
        source:
          $ref: '#/components/schemas/CreateTransferRequest_source'
        token_id:
          description: Token ID
          type: string
      required:
      - amount
      - destination
      - source
      - token_id
      type: object
    EstimateFeeResponse:
      example:
        amount: amount
        token_id: token_id
      properties:
        amount:
          description: Amount
          type: string
        token_id:
          description: Token ID
          type: string
      required:
      - amount
      - token_id
      type: object
    EventType:
      example:
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    Fee:
      description: Fee
      example:
        maxFeeAmount: maxFeeAmount
        tokenId: tokenId
        type: 6
      properties:
        maxFeeAmount:
          description: Max fee amount
          type: string
        tokenId:
          description: Token ID
          type: string
        type:
          description: Fee type
          type: integer
          x-enum-varnames:
          - Fixed
      required:
      - maxFeeAmount
      - tokenId
      - type
      type: object
    FeeType:
      description: Fee type
      type: integer
      x-enum-varnames:
      - Fixed
    GasStation:
      example:
        gas_threshold: gas_threshold
        chain_id: chain_id
        updated_at: updated_at
        org_id: org_id
        created_at: created_at
        gas_capacity: gas_capacity
        max_fee_limit: max_fee_limit
        disabled: true
        id: id
        app_id: app_id
      properties:
        app_id:
          description: Application ID
          type: string
        chain_id:
          description: Chain ID
          type: string
        created_at:
          description: Created time
          type: string
        disabled:
          description: Disabled
          type: boolean
        gas_capacity:
          description: Gas Capacity
          type: string
        gas_threshold:
          description: Gas Threshold
          type: string
        id:
          description: Gas Station ID
          type: string
        max_fee_limit:
          description: Max Fee Limit
          type: string
        org_id:
          description: Organization ID
          type: string
        updated_at:
          description: Updated time
          type: string
      required:
      - app_id
      - chain_id
      - disabled
      - gas_capacity
      - gas_threshold
      - id
      - max_fee_limit
      - org_id
      type: object
    GetGasStationDepositAddressReply:
      example:
        addresses:
        - addresses
        - addresses
      properties:
        addresses:
          description: Deposit Addresses
          items:
            type: string
          type: array
          uniqueItems: false
      type: object
    SignMessageRequest:
      example:
        chain_id: chain_id
        source:
          wallet_id: wallet_id
          address: address
          source_type: source_type
        message: message
      properties:
        chain_id:
          description: Chain ID
          type: string
        message:
          description: tx message content
          type: string
        source:
          $ref: '#/components/schemas/SignMessageRequest_source'
      required:
      - chain_id
      - message
      - source
      type: object
    SignMessageResponse:
      example:
        signature: signature
      properties:
        signature:
          description: Signature
          type: string
      required:
      - signature
      type: object
    SweepAddressRequest:
      example:
        min_collect_amount: min_collect_amount
        fee_address: fee_address
        token_id: token_id
        max_fee_limit: max_fee_limit
        to_address: to_address
      properties:
        fee_address:
          description: address to pay the fee
          type: string
        max_fee_limit:
          description: max fee limit
          type: string
        min_collect_amount:
          description: min collect amount
          type: string
        to_address:
          description: address to sweep to
          type: string
        token_id:
          description: token id to sweep
          type: string
      required:
      - fee_address
      - to_address
      - token_id
      type: object
    SweepAddressResponse:
      example:
        tx_id: tx_id
      properties:
        tx_id:
          type: string
      required:
      - tx_id
      type: object
    Token:
      example:
        icon_url: icon_url
        symbol: symbol
        metadata:
          key: metadata
        need_memo: true
        total_supply: total_supply
        precision: 6
        created_at: created_at
        can_deposit: true
        contract_address: contract_address
        min_withdraw_amount: min_withdraw_amount
        max_withdraw_amount: max_withdraw_amount
        updated_at: updated_at
        decimals: 0
        name: name
        can_withdraw: true
        id: id
        min_deposit_amount: min_deposit_amount
      properties:
        can_deposit:
          description: Whether deposits are allowed
          type: boolean
        can_withdraw:
          description: Whether withdrawals are allowed
          type: boolean
        contract_address:
          description: Contract address
          type: string
        created_at:
          description: Creation time
          type: string
        decimals:
          description: Decimals
          type: integer
        icon_url:
          description: Icon
          type: string
        id:
          description: Token ID
          type: string
        max_withdraw_amount:
          description: Max withdraw amount
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Extended metadata
          type: object
        min_deposit_amount:
          description: Min deposit amount
          type: string
        min_withdraw_amount:
          description: Min withdraw amount
          type: string
        name:
          description: Name
          type: string
        need_memo:
          description: Whether a memo is required
          type: boolean
        precision:
          description: Precision
          type: integer
        symbol:
          description: "Symbol . e.g.: BTC / ETH"
          type: string
        total_supply:
          description: Total supply
          type: string
        updated_at:
          description: Last updated time
          type: string
      type: object
    Transaction:
      example:
        walletId: walletId
        chain: chain
        tokenId: tokenId
        signature: signature
        fee:
          maxFeeAmount: maxFeeAmount
          tokenId: tokenId
          type: 6
        confirmedNum: 0
        destination:
          amount: amount
          address: address
          memo: memo
          type: type
        description: description
        source:
          amount: amount
          address: address
          memo: memo
          type: type
        type: type
        createdAt: createdAt
        uid: uid
        chainId: chainId
        assetId: assetId
        extra:
          key: ""
        id: id
        hash: hash
        failedReason: failedReason
        status: status
        updatedAt: updatedAt
      properties:
        assetId:
          description: Asset ID
          type: string
        chain:
          description: Chain
          type: string
        chainId:
          description: Chain ID
          type: string
        confirmedNum:
          description: Confirmed number
          type: integer
        createdAt:
          description: Created time
          type: string
        description:
          description: Description
          type: string
        destination:
          $ref: '#/components/schemas/TransactionEndpoint'
        extra:
          additionalProperties: {}
          description: Extra
          type: object
        failedReason:
          description: Failed reason
          type: string
        fee:
          $ref: '#/components/schemas/Fee'
        hash:
          description: Transaction hash
          type: string
        id:
          description: Transaction ID
          type: string
        signature:
          description: Signature
          type: string
        source:
          $ref: '#/components/schemas/TransactionEndpoint'
        status:
          description: Transaction status
          type: string
        tokenId:
          description: Token ID
          type: string
        type:
          description: Transaction type
          type: string
          x-enum-varnames:
          - TransactionType_Unknown
          - TransactionType_Deposit
          - TransactionType_Withdraw
        uid:
          description: The custom unique transaction identifier
          type: string
        updatedAt:
          description: Updated time
          type: string
        walletId:
          description: Wallet ID
          type: string
      type: object
    TransactionEndpoint:
      description: Source
      example:
        amount: amount
        address: address
        memo: memo
        type: type
      properties:
        address:
          description: Address
          type: string
        amount:
          description: Amount
          type: string
        memo:
          description: The memo
          type: string
        type:
          description: Transaction endpoint type
          type: string
      type: object
    TransactionType:
      description: Transaction type
      type: string
      x-enum-varnames:
      - TransactionType_Unknown
      - TransactionType_Deposit
      - TransactionType_Withdraw
    TransferDestinationAddress:
      example:
        destination_type: destination_type
        address: address
      properties:
        address:
          description: Address
          type: string
        destination_type:
          description: destination type
          type: string
          x-enum-varnames:
          - TransferDestinationType_Address
      required:
      - address
      - destination_type
      type: object
    TransferDestinationType:
      description: destination type
      type: string
      x-enum-varnames:
      - TransferDestinationType_Address
    TransferSourceAsset:
      example:
        wallet_id: wallet_id
        source_type: source_type
      properties:
        source_type:
          description: source type
          type: string
          x-enum-varnames:
          - TransferSourceType_Asset
          - TransferSourceType_Web3
        wallet_id:
          description: Wallet ID
          type: string
      required:
      - source_type
      - wallet_id
      type: object
    TransferSourceType:
      description: source type
      type: string
      x-enum-varnames:
      - TransferSourceType_Asset
      - TransferSourceType_Web3
    TransferSourceWeb3:
      example:
        wallet_id: wallet_id
        address: address
        source_type: source_type
      properties:
        address:
          description: Address
          type: string
        source_type:
          description: source type
          type: string
          x-enum-varnames:
          - TransferSourceType_Asset
          - TransferSourceType_Web3
        wallet_id:
          description: Wallet ID
          type: string
      required:
      - address
      - source_type
      - wallet_id
      type: object
    UpdateEndpoint:
      example:
        uid: uid
        description: description
        disabled: true
        eventTypes:
        - eventTypes
        - eventTypes
        url: url
      properties:
        description:
          type: string
        disabled:
          type: boolean
        eventTypes:
          items:
            type: string
          type: array
          uniqueItems: false
        uid:
          type: string
        url:
          type: string
      type: object
    UpdateGasStationRequest:
      example:
        gas_threshold: gas_threshold
        gas_capacity: gas_capacity
        max_fee_limit: max_fee_limit
        disabled: true
      properties:
        disabled:
          description: Disabled
          type: boolean
        gas_capacity:
          description: Gas Capacity
          type: string
        gas_threshold:
          description: Gas Threshold
          type: string
        max_fee_limit:
          description: Max Fee Limit
          type: string
      type: object
    UpdateTokenRequest:
      example:
        uid: uid
        name: name
        id: id
      properties:
        id:
          description: Token ID
          type: string
        name:
          description: Token name
          type: string
        uid:
          description: Unique ID
          type: string
      type: object
    UpdateWalletRequest:
      example:
        uid: uid
        name: name
      properties:
        name:
          description: Wallet Name
          type: string
        uid:
          description: Custom ID
          type: string
      type: object
    ValidateAddressesReply:
      example:
        items:
        - address: address
          validity: true
        - address: address
          validity: true
      properties:
        items:
          description: Address validity items
          items:
            $ref: '#/components/schemas/AddressValidityItem'
          type: array
          uniqueItems: false
      type: object
    Wallet:
      example:
        uid: uid
        sub_type: sub_type
        name: name
        created_at: created_at
        id: id
        type: type
        updatedAt: updatedAt
      properties:
        created_at:
          description: Created time
          type: string
        id:
          description: Wallet ID
          type: string
        name:
          description: Wallet name
          type: string
        sub_type:
          description: Wallet sub type
          type: string
          x-enum-varnames:
          - WalletSubType_Custodial_Asset
          - WalletSubType_Custodial_Web3
        type:
          description: Wallet type
          type: string
          x-enum-varnames:
          - WalletType_Custodial
        uid:
          description: External unique ID
          type: string
        updatedAt:
          description: Updated time
          type: string
      required:
      - id
      - name
      - sub_type
      - type
      - uid
      type: object
    WalletSubType:
      description: Wallet sub type
      type: string
      x-enum-varnames:
      - WalletSubType_Custodial_Asset
      - WalletSubType_Custodial_Web3
    WalletType:
      description: Wallet type
      type: string
      x-enum-varnames:
      - WalletType_Custodial
    CreateTransferRequest_destination:
      description: The ID of the wallet to which the transfer will be made
      oneOf:
      - $ref: '#/components/schemas/TransferDestinationAddress'
      type: object
    CreateTransferRequest_source:
      description: The ID of the wallet from which the transfer will be made
      oneOf:
      - $ref: '#/components/schemas/TransferSourceAsset'
      type: object
    SignMessageRequest_source:
      description: The ID of the wallet from which the transfer will be made
      oneOf:
      - $ref: '#/components/schemas/TransferSourceWeb3'
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-Api-Key
      type: apiKey
