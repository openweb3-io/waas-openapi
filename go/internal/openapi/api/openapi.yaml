openapi: 3.0.0
info:
  contact: {}
  description: This is a WaaS OpenAPI Server.
  title: WaaS OpenAPI Documentation
  version: "1.0"
servers:
- url: /
paths:
  /api/v1/addresses:
    get:
      description: List of all available addresses.
      operationId: v1.addresses.list
      parameters:
      - description: The chain ids.
        explode: false
        in: query
        name: chain_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The cursor to use for pagination.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of records to return default: 20'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Unique system generated identifier of the wallet
        explode: false
        in: query
        name: wallet_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List all addresses
      tags:
      - Addresses
  /api/v1/chains:
    get:
      description: List of all available chains.
      operationId: v1.chains.list
      parameters:
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of records to return default: 20'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Chain'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List all chains
      tags:
      - Chains
  /api/v1/chains/{chainId}:
    get:
      description: Retrieve chain information.
      operationId: v1.chains.retrieve
      parameters:
      - description: Chain ID
        explode: false
        in: path
        name: chainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chain'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Retrieve chain
      tags:
      - Chains
  /api/v1/endpoints:
    get:
      description: List webhook endpoints
      operationId: v1.webhooks.list
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of records to return default: 20'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List webhook endpoints
      tags:
      - Webhook endpoints
  /api/v1/tokens:
    get:
      description: Retrieve a list of all tokens.
      operationId: v1.tokens.list
      parameters:
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of records to return default: 20'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List tokens
      tags:
      - Tokens
    post:
      description: Create a tokens.
      operationId: v1.tokens.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Create token
      tags:
      - Tokens
  /api/v1/tokens/{tokenId}:
    get:
      description: Get token info by ID
      operationId: v1.tokens.retrieve
      parameters:
      - description: Token ID
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Get Token
      tags:
      - Tokens
    patch:
      description: Update a tokens.
      operationId: v1.tokens.update
      parameters:
      - description: Token ID
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTokenRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Update token
      tags:
      - Tokens
  /api/v1/transactions:
    get:
      description: List transactions
      operationId: v1.transactions.list
      parameters:
      - description: The assetId involved in the transaction.
        explode: false
        in: query
        name: asset_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The blockchain network on which the transaction takes place.
        explode: false
        in: query
        name: chain_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A cursor value for pagination purposes.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: The transaction hash, which uniquely identifies a transaction
          on the blockchain.
        explode: true
        in: query
        name: hash
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of records to return default: 20'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The status of the transaction.
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: The tokenId involved in the transaction.
        explode: false
        in: query
        name: token_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique system generated identifier of the wallet
        explode: false
        in: query
        name: wallet_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page-Transaction'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List transactions
      tags:
      - Transactions
  /api/v1/transactions/estimate_fee:
    post:
      description: Estimate fee for a transfer transaction
      operationId: v1.transactions.estimate_fee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstimateFeeRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateFeeResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Estimate fee
      tags:
      - Transactions
  /api/v1/transactions/transfer:
    post:
      description: Create a transfer transaction
      operationId: v1.transactions.transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransferResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Transfer token
      tags:
      - Transactions
  /api/v1/transactions/{transactionId}:
    get:
      description: Get a transaction by ID
      operationId: v1.transactions.retrieve
      parameters:
      - description: Transaction ID
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Get transaction
      tags:
      - Transactions
  /api/v1/wallets:
    get:
      description: List all wallets
      operationId: v1.wallets.list
      parameters:
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of records to return default: 20'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List wallets
      tags:
      - Wallets
    post:
      description: Create a Wallet
      operationId: v1.wallets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletRequest'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Create wallet
      tags:
      - Wallets
  /api/v1/wallets/{walletId}:
    delete:
      description: Delete a Wallet
      operationId: v1.wallets.delete
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Delete wallet
      tags:
      - Wallets
    get:
      description: Get a wallet by ID
      operationId: v1.wallets.retrieve
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Get wallet
      tags:
      - Wallets
    patch:
      description: Update a Wallet
      operationId: v1.wallets.update
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWalletRequest'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Update wallet
      tags:
      - Wallets
  /api/v1/wallets/{walletId}/addresses:
    get:
      description: List wallet's deposit addresses
      operationId: v1.wallets.listDepositAddresses
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: chain ids
        explode: false
        in: query
        name: chain_ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Cursor
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Limit, default is 20
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage-Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: List deposit addresses
      tags:
      - Addresses
    post:
      description: Create deposit address for wallet
      operationId: v1.wallets.createAddress
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressRequest'
        description: Request Body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Create deposit address
      tags:
      - Addresses
  /api/v1/wallets/{walletId}/addresses/{address}:
    get:
      description: Get wallet's deposit address
      operationId: v1.wallets.getDepositAddress
      parameters:
      - description: Wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: Address
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      - description: The token id used in the transaction (e.g., TON, USDT_ETH, etc.).
        explode: true
        in: query
        name: token_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Get deposit address
      tags:
      - Addresses
  /api/v1/webhooks/endpoints:
    post:
      description: Create a webhook endpoint
      operationId: v1.webhooks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpoint'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Create webhook endpoint
      tags:
      - Webhook endpoints
  /api/v1/webhooks/endpoints/{endpointId}:
    delete:
      description: Delete specific webhook endpoint
      operationId: v1.webhooks.delete
      parameters:
      - description: Endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Delete webhook endpoint
      tags:
      - Webhook endpoints
    get:
      description: Get specific webhook endpoint
      operationId: v1.webhooks.retrieve
      parameters:
      - description: Endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Get webhook endpoint
      tags:
      - Webhook endpoints
    patch:
      description: Update specific webhook endpoint
      operationId: v1.webhooks.update
      parameters:
      - description: Endpoint ID
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpoint'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: OK
      security:
      - ApiKeyAuth: []
      - SignatureAuth: []
      summary: Update webhook endpoint
      tags:
      - Webhook endpoints
components:
  schemas:
    Address:
      example:
        path: path
        chain: chain
        wallet_id: wallet_id
        address: address
        chain_id: chain_id
        updated_at: updated_at
        created_at: created_at
        memo: memo
      properties:
        address:
          description: Blockchain address
          type: string
        chain:
          description: Chain name
          type: string
        chain_id:
          description: Chain ID
          type: string
        created_at:
          description: Created time
          type: string
        memo:
          description: The memo
          type: string
        path:
          description: Derivation path
          type: string
        updated_at:
          description: Updated time
          type: string
        wallet_id:
          description: Chain ID
          type: string
      required:
      - address
      type: object
    BigInt:
      type: object
    Chain:
      example:
        icon_url: icon_url
        symbol: symbol
        updated_at: updated_at
        need_memo: true
        name: name
        created_at: created_at
        confirm_num: 0
        id: id
        explorer_tx_url: explorer_tx_url
        explorer_address_url: explorer_address_url
      properties:
        confirm_num:
          description: Confirmation number
          type: integer
        created_at:
          description: Created time
          type: string
        explorer_address_url:
          description: Explorer address URL
          type: string
        explorer_tx_url:
          description: Explorer transaction URL
          type: string
        icon_url:
          description: Icon URL
          type: string
        id:
          description: Chain ID
          type: string
        name:
          description: Chain name
          type: string
        need_memo:
          description: Need memo
          type: boolean
        symbol:
          description: Chain symbol
          type: string
        updated_at:
          description: Updated time
          type: string
      type: object
    CreateAddressRequest:
      example:
        chain_id: chain_id
      properties:
        chain_id:
          description: Chain ID
          type: string
      required:
      - chain_id
      type: object
    CreateEndpoint:
      example:
        uid: uid
        description: description
        disabled: true
        eventTypes:
        - eventTypes
        - eventTypes
        url: url
      properties:
        description:
          description: The description of the endpoint
          type: string
        disabled:
          description: The disabled of the endpoint
          type: boolean
        eventTypes:
          description: The event types of the endpoint
          items:
            type: string
          type: array
        uid:
          description: The uid of the endpoint
          type: string
        url:
          description: The url of the endpoint
          type: string
      required:
      - eventTypes
      - url
      type: object
    CreateTokenRequest:
      example:
        uid: uid
        name: name
      properties:
        name:
          description: Token name
          type: string
        uid:
          description: Unique ID
          type: string
      type: object
    CreateTransferRequest:
      example:
        amount: amount
        token_id: token_id
        fee: ""
        destination: ""
        source: ""
      properties:
        amount:
          description: The amount to be transferred
          type: string
        destination:
          allOf:
          - $ref: '#/components/schemas/TransferDestination'
          description: The ID of the wallet to which the transfer will be made
        fee:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Fee
        source:
          allOf:
          - $ref: '#/components/schemas/TransferSource'
          description: The ID of the wallet from which the transfer will be made
        token_id:
          description: The tokenId to be transferred
          type: string
      required:
      - amount
      - destination
      - source
      - token_id
      type: object
    CreateTransferResponse:
      example:
        transaction_id: transaction_id
        status: status
      properties:
        status:
          description: Transaction status
          type: string
        transaction_id:
          description: Transaction ID
          type: string
      required:
      - status
      - transaction_id
      type: object
    CreateWalletRequest:
      example:
        uid: uid
        name: name
      properties:
        name:
          description: Wallet name
          type: string
        uid:
          description: Custom ID
          type: string
      required:
      - name
      type: object
    CursorPage-Address:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 0
        has_next: true
        has_prev: true
        items:
        - path: path
          chain: chain
          wallet_id: wallet_id
          address: address
          chain_id: chain_id
          updated_at: updated_at
          created_at: created_at
          memo: memo
        - path: path
          chain: chain
          wallet_id: wallet_id
          address: address
          chain_id: chain_id
          updated_at: updated_at
          created_at: created_at
          memo: memo
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-Chain:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 6
        has_next: true
        has_prev: true
        items:
        - icon_url: icon_url
          symbol: symbol
          updated_at: updated_at
          need_memo: true
          name: name
          created_at: created_at
          confirm_num: 0
          id: id
          explorer_tx_url: explorer_tx_url
          explorer_address_url: explorer_address_url
        - icon_url: icon_url
          symbol: symbol
          updated_at: updated_at
          need_memo: true
          name: name
          created_at: created_at
          confirm_num: 0
          id: id
          explorer_tx_url: explorer_tx_url
          explorer_address_url: explorer_address_url
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Chain'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-Endpoint:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 0
        has_next: true
        has_prev: true
        items:
        - filter: filter
          createdAt: createdAt
          uid: uid
          description: description
          disabled: true
          id: id
          eventTypes:
          - eventTypes
          - eventTypes
          url: url
        - filter: filter
          createdAt: createdAt
          uid: uid
          description: description
          disabled: true
          id: id
          eventTypes:
          - eventTypes
          - eventTypes
          url: url
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-Token:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 1
        has_next: true
        has_prev: true
        items:
        - icon_url: icon_url
          symbol: symbol
          metadata:
            key: metadata
          need_memo: true
          total_supply: ""
          precision: 6
          created_at: created_at
          can_deposit: true
          contract_address: contract_address
          min_withdraw_amount: ""
          max_withdraw_amount: ""
          updated_at: updated_at
          decimals: 0
          name: name
          can_withdraw: true
          id: id
          min_deposit_amount: ""
        - icon_url: icon_url
          symbol: symbol
          metadata:
            key: metadata
          need_memo: true
          total_supply: ""
          precision: 6
          created_at: created_at
          can_deposit: true
          contract_address: contract_address
          min_withdraw_amount: ""
          max_withdraw_amount: ""
          updated_at: updated_at
          decimals: 0
          name: name
          can_withdraw: true
          id: id
          min_deposit_amount: ""
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    CursorPage-Wallet:
      example:
        prev_cursor: prev_cursor
        next_cursor: next_cursor
        total: 0
        has_next: true
        has_prev: true
        items:
        - uid: uid
          name: name
          created_at: created_at
          id: id
          updatedAt: updatedAt
        - uid: uid
          name: name
          created_at: created_at
          id: id
          updatedAt: updatedAt
      properties:
        has_next:
          type: boolean
        has_prev:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Wallet'
          type: array
        next_cursor:
          type: string
        prev_cursor:
          type: string
        total:
          type: integer
      required:
      - has_next
      - has_prev
      - items
      - total
      type: object
    Endpoint:
      example:
        filter: filter
        createdAt: createdAt
        uid: uid
        description: description
        disabled: true
        id: id
        eventTypes:
        - eventTypes
        - eventTypes
        url: url
      properties:
        createdAt:
          type: string
        description:
          type: string
        disabled:
          type: boolean
        eventTypes:
          items:
            type: string
          type: array
        filter:
          type: string
        id:
          type: string
        uid:
          type: string
        url:
          type: string
      required:
      - createdAt
      - description
      - disabled
      - eventTypes
      - filter
      - id
      - url
      type: object
    Error:
      properties:
        code:
          description: error code
          type: integer
        msg:
          description: error message
          type: string
      required:
      - code
      - msg
      type: object
    EstimateFeeRequest:
      example:
        amount: amount
        token_id: token_id
        extra: extra
        memo: memo
        to_address: to_address
        contract_address: contract_address
        from_address: from_address
      properties:
        amount:
          description: Amount
          type: string
        contract_address:
          description: Contract address
          type: string
        extra:
          description: Extra
          type: string
        from_address:
          description: From address
          type: string
        memo:
          description: Memo
          type: string
        to_address:
          description: To address
          type: string
        token_id:
          description: Token ID
          type: string
      required:
      - amount
      - from_address
      - to_address
      - token_id
      type: object
    EstimateFeeResponse:
      example:
        amount: amount
        token_id: token_id
      properties:
        amount:
          description: Amount
          type: string
        token_id:
          description: Token ID
          type: string
      required:
      - amount
      - token_id
      type: object
    Fee:
      properties:
        maxFeeAmount:
          description: Max fee amount
          type: string
        tokenId:
          description: Token ID
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/FeeType'
          description: Fee type
      required:
      - maxFeeAmount
      - tokenId
      - type
      type: object
    FeeType:
      enum:
      - 0
      type: integer
      x-enum-varnames:
      - Fixed
    Page-Transaction:
      example:
        total: 6
        items:
        - walletId: walletId
          chain: chain
          tokenId: tokenId
          signature: signature
          fee: ""
          confirmedNum: 0
          destination: ""
          description: description
          source: ""
          type: ""
          createdAt: createdAt
          chainId: chainId
          assetId: assetId
          extra:
            key: ""
          id: id
          hash: hash
          failedReason: failedReason
          status: status
          updatedAt: updatedAt
        - walletId: walletId
          chain: chain
          tokenId: tokenId
          signature: signature
          fee: ""
          confirmedNum: 0
          destination: ""
          description: description
          source: ""
          type: ""
          createdAt: createdAt
          chainId: chainId
          assetId: assetId
          extra:
            key: ""
          id: id
          hash: hash
          failedReason: failedReason
          status: status
          updatedAt: updatedAt
      properties:
        items:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        total:
          type: integer
      required:
      - items
      - total
      type: object
    Token:
      example:
        icon_url: icon_url
        symbol: symbol
        metadata:
          key: metadata
        need_memo: true
        total_supply: ""
        precision: 6
        created_at: created_at
        can_deposit: true
        contract_address: contract_address
        min_withdraw_amount: ""
        max_withdraw_amount: ""
        updated_at: updated_at
        decimals: 0
        name: name
        can_withdraw: true
        id: id
        min_deposit_amount: ""
      properties:
        can_deposit:
          description: Whether deposits are allowed
          type: boolean
        can_withdraw:
          description: Whether withdrawals are allowed
          type: boolean
        contract_address:
          description: Contract address
          type: string
        created_at:
          description: Creation time
          type: string
        decimals:
          description: Decimals
          type: integer
        icon_url:
          description: Icon
          type: string
        id:
          description: Token ID
          type: string
        max_withdraw_amount:
          allOf:
          - $ref: '#/components/schemas/BigInt'
          description: Max withdraw amount
        metadata:
          additionalProperties:
            type: string
          description: Extended metadata
          type: object
        min_deposit_amount:
          allOf:
          - $ref: '#/components/schemas/BigInt'
          description: Min deposit amount
        min_withdraw_amount:
          allOf:
          - $ref: '#/components/schemas/BigInt'
          description: Min withdraw amount
        name:
          description: Name
          type: string
        need_memo:
          description: Whether a memo is required
          type: boolean
        precision:
          description: Precision
          type: integer
        symbol:
          description: 'Symbol . e.g.: BTC / ETH'
          type: string
        total_supply:
          allOf:
          - $ref: '#/components/schemas/BigInt'
          description: Total supply
        updated_at:
          description: Last updated time
          type: string
      type: object
    Transaction:
      example:
        walletId: walletId
        chain: chain
        tokenId: tokenId
        signature: signature
        fee: ""
        confirmedNum: 0
        destination: ""
        description: description
        source: ""
        type: ""
        createdAt: createdAt
        chainId: chainId
        assetId: assetId
        extra:
          key: ""
        id: id
        hash: hash
        failedReason: failedReason
        status: status
        updatedAt: updatedAt
      properties:
        assetId:
          description: Asset ID
          type: string
        chain:
          description: Chain
          type: string
        chainId:
          description: Chain ID
          type: string
        confirmedNum:
          description: Confirmed number
          type: integer
        createdAt:
          description: Created time
          type: string
        description:
          description: Description
          type: string
        destination:
          allOf:
          - $ref: '#/components/schemas/TransactionEndpoint'
          description: Destination
        extra:
          additionalProperties: {}
          description: Extra
          type: object
        failedReason:
          description: Failed reason
          type: string
        fee:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Fee
        hash:
          description: Transaction hash
          type: string
        id:
          description: Transaction ID
          type: string
        signature:
          description: Signature
          type: string
        source:
          allOf:
          - $ref: '#/components/schemas/TransactionEndpoint'
          description: Source
        status:
          description: Transaction status
          type: string
        tokenId:
          description: Token ID
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/TransactionType'
          description: Transaction type
        updatedAt:
          description: Updated time
          type: string
        walletId:
          description: Wallet ID
          type: string
      type: object
    TransactionEndpoint:
      properties:
        address:
          description: Address
          type: string
        amount:
          description: Amount
          type: string
        memo:
          description: The memo
          type: string
        type:
          description: Transaction endpoint type
          type: string
      type: object
    TransactionType:
      enum:
      - Unkown
      - Deposit
      - Withdraw
      type: string
      x-enum-varnames:
      - TransactionType_Unknown
      - TransactionType_Deposit
      - TransactionType_Withdraw
    TransferDestination:
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/TransferDestinationAddress'
          description: Address
        type:
          allOf:
          - $ref: '#/components/schemas/TransferDestinationType'
          description: Transfer destination type
      required:
      - type
      type: object
    TransferDestinationAddress:
      properties:
        address:
          description: Address
          type: string
      required:
      - address
      type: object
    TransferDestinationType:
      enum:
      - Address
      type: string
      x-enum-varnames:
      - TransferDestinationType_Address
    TransferSource:
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/TransferSourceAddress'
          description: Address
        type:
          allOf:
          - $ref: '#/components/schemas/TransferSourceType'
          description: Transfer source type
      required:
      - type
      type: object
    TransferSourceAddress:
      properties:
        address:
          description: Address
          type: string
        wallet_id:
          description: Wallet ID
          type: string
      required:
      - address
      - wallet_id
      type: object
    TransferSourceType:
      enum:
      - Address
      type: string
      x-enum-varnames:
      - TransferSourceType_Address
    UpdateEndpoint:
      example:
        uid: uid
        description: description
        disabled: true
        eventTypes:
        - eventTypes
        - eventTypes
        url: url
      properties:
        description:
          type: string
        disabled:
          type: boolean
        eventTypes:
          items:
            type: string
          type: array
        uid:
          type: string
        url:
          type: string
      required:
      - eventTypes
      type: object
    UpdateTokenRequest:
      example:
        uid: uid
        name: name
        id: id
      properties:
        id:
          description: Token ID
          type: string
        name:
          description: Token name
          type: string
        uid:
          description: Unique ID
          type: string
      type: object
    UpdateWalletRequest:
      example:
        uid: uid
        name: name
      properties:
        name:
          description: Wallet Name
          type: string
        uid:
          description: Custom ID
          type: string
      type: object
    Wallet:
      example:
        uid: uid
        name: name
        created_at: created_at
        id: id
        updatedAt: updatedAt
      properties:
        created_at:
          description: Created time
          type: string
        id:
          description: Wallet ID
          type: string
        name:
          description: Wallet name
          type: string
        uid:
          description: External unique ID
          type: string
        updatedAt:
          description: Updated time
          type: string
      required:
      - id
      - name
      - uid
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-Api-Key
      type: apiKey
    SignatureAuth:
      in: header
      name: X-Signature
      type: apiKey
