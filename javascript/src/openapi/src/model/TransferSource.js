/**
 * WaaS OpenAPI Documentation
 * This is a custody wallet service openapi server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransferSourceAddress from './TransferSourceAddress';
import TransferSourceType from './TransferSourceType';

/**
 * The TransferSource model module.
 * @module model/TransferSource
 * @version 1.0
 */
class TransferSource {
    /**
     * Constructs a new <code>TransferSource</code>.
     * @alias module:model/TransferSource
     */
    constructor() { 
        
        TransferSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransferSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransferSource} obj Optional instance to populate.
     * @return {module:model/TransferSource} The populated <code>TransferSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransferSource();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], TransferSourceAddress);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], TransferSourceType);
            }
        }
        return obj;
    }


}

/**
 * Address
 * @member {module:model/TransferSourceAddress} address
 */
TransferSource.prototype['address'] = undefined;

/**
 * Transfer source type
 * @member {module:model/TransferSourceType} type
 */
TransferSource.prototype['type'] = undefined;






export default TransferSource;

