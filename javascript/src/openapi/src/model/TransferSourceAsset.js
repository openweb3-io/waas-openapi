/**
 * WaaS OpenAPI Documentation
 * This is a WaaS OpenAPI Server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransferSourceAsset model module.
 * @module model/TransferSourceAsset
 * @version 1.0
 */
class TransferSourceAsset {
    /**
     * Constructs a new <code>TransferSourceAsset</code>.
     * @alias module:model/TransferSourceAsset
     * @param sourceType {String} source type
     * @param walletId {String} Wallet ID
     */
    constructor(sourceType, walletId) { 
        
        TransferSourceAsset.initialize(this, sourceType, walletId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sourceType, walletId) { 
        obj['source_type'] = sourceType;
        obj['wallet_id'] = walletId;
    }

    /**
     * Constructs a <code>TransferSourceAsset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransferSourceAsset} obj Optional instance to populate.
     * @return {module:model/TransferSourceAsset} The populated <code>TransferSourceAsset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransferSourceAsset();

            if (data.hasOwnProperty('source_type')) {
                obj['source_type'] = ApiClient.convertToType(data['source_type'], 'String');
            }
            if (data.hasOwnProperty('wallet_id')) {
                obj['wallet_id'] = ApiClient.convertToType(data['wallet_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransferSourceAsset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransferSourceAsset</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransferSourceAsset.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['source_type'] && !(typeof data['source_type'] === 'string' || data['source_type'] instanceof String)) {
            throw new Error("Expected the field `source_type` to be a primitive type in the JSON string but got " + data['source_type']);
        }
        // ensure the json data is a string
        if (data['wallet_id'] && !(typeof data['wallet_id'] === 'string' || data['wallet_id'] instanceof String)) {
            throw new Error("Expected the field `wallet_id` to be a primitive type in the JSON string but got " + data['wallet_id']);
        }

        return true;
    }


}

TransferSourceAsset.RequiredProperties = ["source_type", "wallet_id"];

/**
 * source type
 * @member {String} source_type
 */
TransferSourceAsset.prototype['source_type'] = undefined;

/**
 * Wallet ID
 * @member {String} wallet_id
 */
TransferSourceAsset.prototype['wallet_id'] = undefined;






export default TransferSourceAsset;

